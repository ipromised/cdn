{"version":3,"sources":["webpack:///./app/components/containers/MyBatisSQL.js","webpack:///./app/components/containers/ModelToMarkdownTable.js"],"names":["mapDispatchToProps","pasteLogs","connect","sqlLogs","React","Component","constructor","props","super","this","handlePaste","bind","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","items","clipboardData","getAsString","logs","render","className","style","dangerouslySetInnerHTML","__html","parsed","aggregate","model","regex","res","agg","exec","type","field","push","toMarkdownTable","aggs","md","forEach","max","reduce","p","v","length","unshift","repeat","split","map","i","padEnd","join","ModelToMarkdownTable","state","table","setState"],"mappings":"kdAkCA,MAMMA,EAAqB,CACzBC,U,MAAAA,GAGaC,4BAVS,EAAEC,c,4UACxB,IACKA,GAQiCH,EAAzBE,CAxCf,cAAyBE,IAAMC,UAC7BC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,YAAcD,KAAKC,YAAYC,KAAKF,MAG3CG,oBACEC,SAASC,iBAAiB,QAASL,KAAKC,aAG1CK,uBACEF,SAASG,oBAAoB,QAASP,KAAKC,aAG7CA,YAAYO,GACV,MAAMC,EAAQD,EAAEE,cAAcD,MAC1BA,GACFA,EAAM,GAAGE,YAAYC,IACnBZ,KAAKF,MAAMN,UAAUoB,KAK3BC,SACE,OAAO,0BAAMC,UAAU,aACrB,yBAAKC,MAAO,CAAC,cAAe,UAAWC,wBAAyB,CAACC,OAAQjB,KAAKF,MAAMoB,e,iCC7B1F,2BA0CA,SAASC,EAAUC,GACjB,MAAMC,EAAQ,+CAEd,IAAIC,EACJ,MAAMC,EAAM,GACZ,KAAOD,EAAMD,EAAMG,KAAKJ,IAAQ,CAC9B,MAAO,CAAEK,EAAMC,GAASJ,EACxBC,EAAII,KAAK,CACPF,OACAC,UAGJ,OAAOH,EAGT,SAASK,EAAgBC,GACvB,MAAMC,EAAK,GACXD,EAAKE,QAAQ,EAAEN,OAAMC,YACjBI,EAAGH,KAAK,CAACD,EAAOD,EAAM,GAAI,OAG9B,MAAMO,EAAMF,EAAGG,OAAO,CAACC,EAAGC,IAAMA,EAAEF,OAAO,CAACC,EAAGC,IAAMA,EAAEC,OAASF,EAAIC,EAAEC,OAASF,EAAGA,GAAI,GAGpF,OAFAJ,EAAGO,QAAQ,IAAIC,OAAO,GAAGC,MAAM,KAC/BT,EAAGO,QAAQ,CAAC,KAAM,KAAM,OAAQ,OACzBP,EAAGU,IAAI,CAACL,EAAGM,IAAMN,EAAEK,IAAIL,GAAKA,EAAEO,OAAOV,EAAW,IAANS,EAAU,IAAM,MAAME,KAAK,MAAMH,IAAIL,OAASA,MAAMQ,KAAK,MA3B7FC,UArCf,cAAmCjD,IAAMC,UACvCC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,YAAcD,KAAKC,YAAYC,KAAKF,MACzCA,KAAK6C,MAAQ,CAACzB,MAAO,IAGvBjB,oBACEC,SAASC,iBAAiB,QAASL,KAAKC,aAG1CK,uBACEF,SAASG,oBAAoB,QAASP,KAAKC,aAG7CY,SACE,OAAO,0BAAMC,UAAU,aACrB,6BACGd,KAAK6C,MAAMC,OAEd,6BACA,6BACG9C,KAAK6C,MAAMzB,QAKlBnB,YAAYO,GACV,MAAMC,EAAQD,EAAEE,cAAcD,MAC1BA,GACFA,EAAM,GAAGE,YAAYS,IACnBpB,KAAK+C,SAAS,CAAC3B,QAAO0B,MAAOlB,EAAgBT,EAAUC","file":"scripts/mybatis_sql.30329f86216878540c6a.chunk.js","sourcesContent":["import React from \"react\"\nimport {connect} from \"react-redux\"\nimport {pasteLogs} from \"../../actions/mybatisActions\"\n\nclass MyBatisSQL extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlePaste = this.handlePaste.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"paste\", this.handlePaste)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"paste\", this.handlePaste);\n  }\n\n  handlePaste(e) {\n    const items = e.clipboardData.items;\n    if (items) {\n      items[0].getAsString(logs => {\n        this.props.pasteLogs(logs);\n      });\n    }\n  }\n\n  render() {\n    return <main className=\"container\">\n      <pre style={{'white-space': 'normal'}} dangerouslySetInnerHTML={{__html: this.props.parsed}}/>\n    </main>\n  }\n}\n\nconst mapStateToProps = ({sqlLogs}) => {\n  return {\n    ...sqlLogs\n  }\n};\n\nconst mapDispatchToProps = {\n  pasteLogs\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyBatisSQL);\n","import React from \"react\"\n\nclass ModelToMarkdownTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlePaste = this.handlePaste.bind(this);\n    this.state = {model: ''}\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"paste\", this.handlePaste)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"paste\", this.handlePaste);\n  }\n\n  render() {\n    return <main className=\"container\">\n      <pre>\n        {this.state.table}\n      </pre>\n      <hr/>\n      <pre>\n        {this.state.model}\n      </pre>\n    </main>\n  }\n\n  handlePaste(e) {\n    const items = e.clipboardData.items;\n    if (items) {\n      items[0].getAsString(model => {\n        this.setState({model, table: toMarkdownTable(aggregate(model))})\n      });\n    }\n  }\n}\n\nexport default ModelToMarkdownTable;\n\n\nfunction aggregate(model) {\n  const regex = /(?:private|public)?\\s([A-Z]\\w+) ([a-z]\\w+);/g;\n\n  let res;\n  const agg = [];\n  while (res = regex.exec(model)) {\n    const [, type, field] = res;\n    agg.push({\n      type,\n      field\n    });\n  }\n  return agg;\n}\n\nfunction toMarkdownTable(aggs) {\n  const md = [];\n  aggs.forEach(({type, field}) => {\n      md.push([field, type, '', '']);\n    }\n  );\n  const max = md.reduce((p, v) => v.reduce((p, v) => v.length > p ? v.length : p, p), 8);\n  md.unshift('-'.repeat(4).split(''));\n  md.unshift(['名称', '类型', '是否必填', '说明']);\n  return md.map((v, i) => v.map(v => v.padEnd(max, i === 1 ? '-' : ' ')).join('|')).map(v => `|${v}|`).join('\\n');\n}\n"],"sourceRoot":""}