{"version":3,"sources":["webpack:///./app/components/containers/dynamic/es/tables.js","webpack:///./app/api/es.js","webpack:///./app/components/containers/dynamic/es.js","webpack:///./app/lib/NakedTable/utils.js","webpack:///./app/lib/NakedTable/Tabs.js","webpack:///./app/lib/NakedTable/THead.js","webpack:///./app/lib/NakedTable/TBody.js","webpack:///./app/lib/NakedTable/TFoot.js","webpack:///./app/lib/NakedTable/PaginationMixin.js","webpack:///./app/lib/NakedTable/Pagination.js","webpack:///./app/lib/NakedTable/NakedTable.js"],"names":["auto","tabs","pageList","mysql","fields","table_schema","label","table_name","sortable","column_name","column_type","history","host","created","pathname","__webpack_exports__","url","headers","token","localStorage","es_token","match_all","query","es_Indices","react_default","a","Component","constructor","props","super","this","getMapping","bind","state","indices","message","[object Object]","res","async","fetch","method","json","es_indices","setState","ok","e","target","tagName","preventDefault","href","getAttribute","push","render","child","createElement","NakedTable","data","rows","total","length","table","containerClass","onClick","index","format","value","field","row","docs.count","store.size","status","health","es_Types","types","load","componentDidUpdate","prev","cur","match","params","mappings","Object","keys","map","v","key","es","to","es_TypeRecords","loadData","page","size","order","cb","type","body","JSON","stringify","search","from","console","warn","hits","_source","tables","fetchByPage","className","path","component","buildRows","fieldNames","fieldsConfig","i","react__WEBPACK_IMPORTED_MODULE_0___default","ii","fmt","dangerouslySetInnerHTML","__html","NakedTable_Tabs","shouldComponentUpdate","nextProps","selectedTab","tabClass","tabNames","tab","setTab","NakedTable_THead","componentDidMount","initTooltip","window","$","fn","tipsy","getDOMNode","gravity","live","title","html","sortingField","sortingOrder","labelledFields","globallySortable","config","clz","Error","style","data-tip","tooltip","sort","NakedTable_TBody","loadingTip","utils","colSpan","__webpack_require__","NakedTable_TFoot","NakedTable_PaginationMixin","jump","action","currentTarget","setPageSize","buildPageList","onChange","pageTotal","NakedTable_Pagination","assign","getPageInfo","textAlign","NakedTable_NakedTable","forEach","m","_getInitialState","t","handleFormSubmit","Math","ceil","showTabs","ajax","Tabs","tableClass","THead","TBody","getRows","TFoot","footer","showPagination","Pagination","form","addEventListener","doSort","sortOnLoad","b","a1","b1","reverse","inputVal","getParams","s","reduce","p","_objectSpread","pageSize","slice"],"mappings":"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","file":"scripts/24.b4b0c32b41788c0587a1.chunk.js","sourcesContent":["export const auto = {// 自动生成fields\n  tabs: [],\n  pageList: [5, 7]\n};\n\nexport const mysql = {\n  fields: {\n    table_schema: {\n      label: \"schema\",\n    },\n    table_name: {\n      label: \"table\",\n      sortable: true//this column is sortable\n    },\n    column_name: {\n      label: \"column\",\n      sortable: true\n    },\n    column_type: {\n      label: 'type'\n    }\n  },\n  tabs: [\n    {label: \"tab1\", fields: ['table_schema', 'table_name', 'column_name', 'column_type']},\n  ],\n  pageList: [5, 7]\n};\n\nexport const history = {\n  fields: {\n    host: {\n      label: \"host\",\n    },\n    created: {\n      label: \"created\",\n      sortable: true,\n    },\n    pathname: {\n      label: \"path\"\n    }\n  },\n  tabs: [\n    {label: \"tab1\", fields: ['host', 'pathname', 'created']},\n  ],\n  pageList: [5, 7]\n};\n\n\nexport default {\n  mysql,\n  history,\n  auto\n}\n","/**\n api for elasticsearch\n */\n\n\n// es base path\nconst url = '/logically/es';\n\nconst headers = (token) => {\n  return {\n    token: token || localStorage.es_token\n  }\n};\n\nconst match_all = {\n  query: {\n    match_all: {}\n  }\n};\n\nasync function db(data) {\n  /**\n   * 索引数据库数据\n   * select table_schema,table_name,column_name,is_nullable,column_type,column_comment,\n   * character_set_name,collation_name from information_schema.`columns`\n   * where table_schema='yej_server_db_160606';\n   */\n  const res = await fetch(url + '/db/mysql', {method: 'POST', headers, body: JSON.stringify(data)});\n  const json = await res.json();\n  console.log(res, json);\n}\n\nasync function db_search(data) {\n  const res = await fetch(url + '/db/mysql/_search?q=' + encodeURIComponent(data), {headers});\n  const json = await res.json();\n  console.log(json.hits.hits.map(v => v._source));\n}\n\nasync function truncate(indxOrType = '/not/exists') {\n  /**\n   * 清空index或type\n   */\n  const res = await fetch(url + indxOrType + '/_delete_by_query', {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(match_all)\n  });\n  const json = await res.json();\n  console.log(res, json);\n}\n\nexport async function search(index, body = match_all) {\n  const res = await fetch(url + index + '/_search', {\n    method: 'POST',\n    headers: headers(),\n    body: JSON.stringify(body)\n  });\n  return await res.json();\n}\n\nexport async function indices() {\n  const res = await fetch(url + '/_cat/indices?format=json', {\n    method: 'GET',\n    headers: headers()\n  });\n  return await res.json();\n}\n\nexport async function mappings(index = '') {\n  const res = await fetch(url + index + '/_mapping', {\n    method: 'GET',\n    headers: headers()\n  });\n  return await res.json();\n}\n","import React from \"react\";\nimport {search, indices, mappings} from '../../../api/es';\nimport tables from './es/tables';\nimport NakedTable from \"../../../lib/NakedTable/NakedTable\";\nimport {Route, Link} from \"react-router-dom\"\n\nclass Comp extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {match} = this.props;\n    return <div className=\"container\">\n      <Indices match={this.props.match} history={this.props.history}/>\n      <Route path={match.url + '/:index'} render={props => <Types {...props}/>}/>\n      <Route path={match.url + '/:index/:type'} component={TypeRecords}/>\n    </div>\n  }\n}\n\n/**\n * 索引列表\n */\nclass Indices extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getMapping = this.getMapping.bind(this);\n    this.state = {\n      indices: [],\n      message: ''\n    }\n  }\n\n  static table = {\n    fields: {\n      index: {\n        label: \"index\",\n        format(value, field, row) {\n          return `<a href='${value}'>${value}</a>`\n        }\n      },\n      'docs.count': {\n        label: \"doc_count\",\n        sortable: true//this column is sortable\n      },\n      'store.size': {\n        label: \"size\",\n        sortable: true\n      },\n      status: {\n        label: 'status'\n      },\n      health: {\n        label: 'health'\n      },\n    },\n    tabs: [\n      {label: \"tab1\", fields: ['index', 'docs.count', 'store.size', 'status', 'health']},\n    ],\n    pageList: [10, 10],\n  }\n\n  async componentDidMount() {\n    const res = await indices();\n\n    this.setState(res.ok ? {\n      indices: res,\n      message: '',\n    } : {message: res.message});\n  }\n\n  getMapping(e) {\n    if (e.target.tagName === 'A') {\n      e.preventDefault();\n      const href = e.target.getAttribute('href');\n      return this.props.history.push('/d/es/' + href);\n    }\n  }\n\n  render() {\n    const {indices, message} = this.state;\n    const child = message ? message :\n      <NakedTable data={{rows: indices, total: indices.length}} table={Indices.table} containerClass='naked'/>;\n    return <section onClick={this.getMapping}>\n      {child}\n    </section>\n  }\n}\n\nclass Types extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      types: [],\n      message: ''\n    }\n  }\n\n  async componentDidMount() {\n    this.load();\n  }\n\n  componentDidUpdate() {\n    const {index: prev} = this.state;\n    const {index: cur} = this.props.match.params;\n    if (prev !== cur) {\n      this.load();\n    }\n  }\n\n  async load() {\n    const {index} = this.props.match.params;\n    const res = await mappings('/' + index);\n    this.setState(res.ok ? {\n      types: Object.keys(res[index].mappings),\n      index,\n      message: ''\n    } : {message: res.message});\n  }\n\n  render() {\n    if (this.state.message) {\n      return '';\n    }\n    return <ul>\n      {\n        this.state.types.map(v => {\n          return <li key={v}>\n            <Link to={this.props.match.url + '/' + v}>{v}</Link>\n          </li>\n        })\n      }\n    </ul>\n  }\n}\n\nclass TypeRecords extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.loadData = this.loadData.bind(this);\n  }\n\n  async loadData({page, rows: size, field, order}, cb) {// 数据异步加载\n    const {index, type} = this.props.match.params;\n    const res = await search(`/${index}/${type}`, {\n      from: page - 1,\n      size,\n      query: {match_all: {}}\n    });\n    if (!res.ok) {\n      console.warn(res);\n      return;\n    }\n    const rows = res.hits.hits.map(v => v._source);\n    cb({\n      total: res.hits.total,\n      rows,\n    });\n  }\n\n  render() {\n    const table = tables[this.props.match.params.type] || tables.auto;\n    return <NakedTable data={{rows: [], total: 0}} table={table} loadData={this.loadData}\n                       containerClass='naked' fetchByPage={true}/>\n  }\n\n}\n\nexport default Comp;\n","'use strict';\nimport React from \"react\";\n\n\n/**\n * html structure:\n * <tr>\n *     <td>text one</td>\n *     <td>text one</td>\n *     <td>text one</td>\n *     ...\n * </tr>\n * ...\n */\nexport default function buildRows(rows, fieldNames, fieldsConfig) {\n  return rows.map((row, i) => {\n    return <tr key={i}>{\n      fieldNames.map((field, ii) => {\n        var value = row['_' + field];//cache\n        if (value == null) {\n          value = row[field];\n          var fmt = fieldsConfig[field].format;\n          if (fmt) {\n            value = fmt(value, field, row);\n          }\n          row['_' + field] = value || '';\n        }\n        return <td key={ii} dangerouslySetInnerHTML={{__html: value}}/>\n      })}\n    </tr>;\n  })\n};\n","'use strict';\nimport React from \"react\";\n\n/**\n * Default Tabs component\n */\nclass Tabs extends React.Component {\n\n  /**\n   * only update when selectedTab changes\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selectedTab !== nextProps.selectedTab;\n  }\n\n  /**\n   * html structure:\n   * <ul>\n   *     <li class=\"active\"><a href=\"javascript:void(0)\">tab one</a></li>\n   *     <li><a href=\"javascript:void(0)\">tab two</a></li>\n   *     ...\n   * </ul>\n   */\n  render() {\n\n    return <ul className={this.props.tabClass}>{\n      this.props.tabNames.map(function (tab, index) {\n        var props = {key: index};\n        if (this.props.selectedTab === index) {\n          props.className = 'active';\n        } else {\n          props.onClick = this.props.setTab.bind(this, index);\n        }\n        return <li {...props}>\n          <a href='javascript:void(0);'>{tab}</a>\n        </li>\n      }, this)\n    }\n    </ul>\n  }\n};\n\nexport default Tabs;\n","'use strict';\nimport React from \"react\";\n\n/**\n * THead component\n */\nclass THead extends React.Component {\n\n  /**\n   * Only update when selectedTab or order changes\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selectedTab !== nextProps.selectedTab\n      || this.props.order !== nextProps.order\n      || this.props.fields.length !== nextProps.fields.length\n  }\n\n  componentDidMount() {\n    this.initTooltip();\n  }\n\n  /**\n   * add tooltip\n   */\n  initTooltip() {\n    if (window.$ && $.fn.tipsy) {\n      $(this.getDOMNode()).tipsy({\n        gravity: 's',\n        live: '.naked-tooltip',\n        title: function () {\n          return this.getAttribute('data-tip');\n        },\n        html: true\n      });\n    }\n  }\n\n  /**\n   * html structure:\n   * <thead>\n   *     <tr>\n   *         <th>label one</th>\n   *         <th>label two</th>\n   *         <th>label three</th>\n   *         ...\n   *     </tr>\n   * </thead>\n   */\n  render() {\n    const sortingField = this.props.field,\n      sortingOrder = this.props.order,\n      fields = this.props.fields,\n      fieldsConfig = this.props.table.fields || this.props.labelledFields,\n      globallySortable = this.props.table.sortable;\n    return <thead>\n    <tr>{\n      fields.map(function (field, index) {\n        const config = fieldsConfig[field],\n          clz = sortingField === field ? sortingOrder : '';\n        if (!config) {\n          throw Error('field:' + field + ' not in fields list -> ', fields);\n        }\n        const props = {\n          key: index,\n          style: config.style,\n          className: 'naked-tooltip ' + clz,\n          'data-tip': config.tooltip || config.label\n        };\n        if (config.sortable || (globallySortable && config.sortable !== false)) {\n          props.className += ' sortable';\n          props.onClick = this.props.sort.bind(this, field);\n        }\n        return <th {...props}>{fieldsConfig[field].label}</th>\n      }, this)\n    }\n    </tr>\n    </thead>;\n  }\n}\n\nexport default THead;\n","'use strict';\nimport React from \"react\";\n\nimport buildRows from \"./utils\";\n\n/**\n * Default tbody component\n *\n * html structure:\n * <tbody>\n *     <tr>\n *         <td>text one</td>\n *         <td>text one</td>\n *         <td>text one</td>\n *         ...\n *     </tr>\n *     ...\n * </tbody>\n */\nclass TBody extends React.Component {\n  render() {\n\n    const {fields, fieldsConfig, labelledFields, rows, loadingTip} = this.props;\n\n    if (rows && rows.length) {\n      return <tbody>{buildRows(rows, fields, fieldsConfig || labelledFields)}</tbody>;\n    }\n    return <tbody>\n    <tr>\n      <td colSpan={fields.length}>{loadingTip}</td>\n    </tr>\n    </tbody>;\n\n  }\n}\n\nexport default TBody;\n","'use strict';\nimport React from \"react\";\n\nvar buildRows = require(\"./utils\").buildRows;\n\n/**\n * Default tfoot component\n */\nclass TFoot extends React.Component {\n\n  /**\n   * only update when selectedTab changes\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selectedTab !== nextProps.selectedTab;\n  }\n\n  /**\n   * html structure:\n   * <tfoot>\n   *     <tr>\n   *         <td>text one</td>\n   *         <td>text one</td>\n   *         <td>text one</td>\n   *         ...\n   *     </tr>\n   *     ...\n   * </tfoot>\n   */\n  render() {\n\n    const {rows} = this.props;\n    if (rows && rows.length) {\n      return <tfoot>{buildRows(rows, this.props.fields, this.props.table.fields || this.props.labelledFields)}</tfoot>;\n    }\n    return null;\n  }\n}\n\nexport default TFoot;\n","'use strict';\nimport React from \"react\";\n\n/**\n * Pagination utilities\n */\nconst PaginationMixin = {\n\n  /**\n   * jump to g given page\n   * @param action Possible values:start/prev/next/end/jump\n   * @param e Event triggered by an input change\n   */\n  jump: function (action, e) {\n    if (e.currentTarget.className !== 'disabled') {\n      this.props.jump(action, e.target.value);\n    }\n  },\n\n  /**\n   * set row count per page\n   * @param e\n   */\n  setPageSize: function (e) {\n    this.props.setPageSize(e.target.value);\n  },\n\n  /**\n   * page size options\n   *\n   * html structure:\n   * <select>\n   *     <option>5</option>\n   *     <option>10</option>\n   *     <option>15</option>\n   * </select>\n   *\n   * @returns {XML}\n   */\n  buildPageList: function () {\n    return <select onChange={this.setPageSize}>{\n      this.props.pageList.map(function (v, i) {\n        return <option>{v}</option>\n      })}\n    </select>\n  },\n\n  /**\n   * only update when pageNo changes\n   */\n  shouldComponentUpdate: function (nextProps) {\n    return this.props.page !== nextProps.page || this.props.pageTotal !== nextProps.pageTotal;\n  }\n};\n\nexport default PaginationMixin;\n","'use strict';\nimport React from \"react\";\n\nimport PaginationMixin from './PaginationMixin';\n\n/**\n * Default pagination component\n */\nclass Pagination extends React.Component {\n\n  constructor(props) {\n    super(props);\n    Object.assign(this, PaginationMixin);\n  }\n\n  getPageInfo() {\n    return this.props.page + '/' + this.props.pageTotal;\n  }\n\n  /**\n   * html structure:\n   * <ul>\n   *     <li>上一页</li>\n   *     <li>1/5</li>\n   *     <li>下一页</li>\n   * </li>\n   *\n   * @returns {XML}\n   */\n  render() {\n\n    return <div style={{textAlign: 'right'}}>\n      <ul className='nt-pagination'>\n        <li onClick={this.jump.bind(this, 'prev')} className={this.props.page === 1 ? 'disabled' : null}>\n          <a href='javascript:void 0'>上一页</a>\n        </li>\n        <li>\n          {this.getPageInfo()}\n        </li>\n        <li onClick={this.jump.bind(this, 'next')}\n            className={this.props.page === this.props.pageTotal ? 'disabled' : null}>\n          <a href='javascript:void 0'>下一页 </a>\n        </li>\n      </ul>\n    </div>\n  }\n};\n\nexport default Pagination;\n","'use strict';\nimport React from \"react\";\n\nimport Tabs from './Tabs';\nimport THead from './THead';\nimport TBody from './TBody';\nimport TFoot from './TFoot';\nimport Pagination from './Pagination';\nimport './naked.css'\n\nclass NakedTable extends React.Component {\n  constructor(props) {\n    super(props);\n    ['setTab', 'sort', 'jump', 'setPageSize'].forEach(m => this[m] = this[m].bind(this));\n    this.state = this._getInitialState();\n  }\n\n  static defaultProps = {\n\n    Tabs, //Tabs component\n    THead, // THead component\n    TBody, // TBody component\n    TFoot, //TFoot component\n    Pagination, //Pagination component\n\n    containerClass: 'naked', // ClassName of this component\n    tabClass: 'nt-nav', // ClassName of Tabs component\n    tableClass: 'nt-table', // ClassName of table element\n    loadingTip: 'Loading ...', // Loading tip\n\n    tabNames: null,// Allow alternative tab names\n    selectedTab: 0, // Index of the active tab\n    form: null, // Used to provide extra params, optional\n    fetchByPage: false, // Whether fetch data by page\n    showPagination: true, // if false , Pagination component will be hidden\n    data: {total: 0, rows: []}, // Default data\n    order: null, // Sort in which order. Possible values: asc/desc\n    field: null, // Sort by which field\n    loadData: null,// used to load data\n  }\n\n  _getInitialState() {\n    const {table, data} = this.props;\n    const tabNames = this.props.tabNames || table.tabs.map(t => t.label);\n    const pageList = table.pageList || [10];//10 rows per page by default\n\n    this.handleFormSubmit();\n\n    return {\n      data: data, // Table data\n      selectedTab: this.props.selectedTab, // Default tab\n      page: 1, // Default pageNo\n      rows: table.pageList[0], // Row count per page\n      pageTotal: Math.ceil(data.total / table.pageList[0]), // Page count\n      order: this.props.order,\n      field: this.props.field,\n      tabClass: table.tabClass || this.props.tabClass,\n      showTabs: tabNames && tabNames.length > 1,\n      loadData: table.loadData || this.props.loadData,\n      tabNames,\n      pageList,\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const {table, data} = props;\n    let labelledFields = table.fields;\n    let {fields} = table.tabs[props.selectedTab] || {}; // fields to display\n    if (!fields && data.rows.length) {\n      fields = Object.keys(data.rows[0]);\n      labelledFields = fields.map(v => ({[v]: {label: v}}));\n    }\n    return Object.assign({}, state, {\n      data,\n      fields: fields || [],\n      labelledFields: labelledFields || [],\n      pageTotal: Math.ceil(data.total / state.pageList[0]), // Page count\n    })\n  }\n\n  componentDidMount() {\n    this.ajax();\n  }\n\n  render() {\n    const {showTabs, tabClass, tabNames, fields, labelledFields, pageList, pageTotal} = this.state;\n    const {table} = this.props;\n\n    return <div className={this.props.containerClass}>\n      {showTabs && (<this.props.Tabs tabClass={tabClass} tabNames={tabNames}\n                                     selectedTab={this.state.selectedTab} setTab={this.setTab} table={table}/>)}\n      <table className={this.props.tableClass}>\n\n        <this.props.THead fields={fields} table={this.props.table} labelledFields={labelledFields}\n                          field={this.state.field}\n                          order={this.state.order} sort={this.sort} selectedTab={this.state.selectedTab}/>\n\n        <this.props.TBody fields={fields} fieldsConfig={this.props.table.fields} labelledFields={labelledFields}\n                          rows={this.getRows()}/>\n\n        <this.props.TFoot fields={fields} fieldsConfig={this.props.table.fields} labelledFields={labelledFields}\n                          rows={this.state.data.footer} selectedTab={this.state.selectedTab}/>\n\n      </table>\n      {this.props.showPagination && (\n        <this.props.Pagination pageList={pageList} total={this.state.data.total} page={this.state.page}\n                               pageTotal={pageTotal} jump={this.jump} setPageSize={this.setPageSize}/>)}\n    </div>\n  }\n\n\n  /**\n   * Reload table data on form submit\n   */\n  handleFormSubmit() {\n    if (!this.props.form) {\n      return;\n    }\n    this.props.form.addEventListener('submit', (e) => {\n      e.preventDefault();\n      this.ajax(1);// 1 : page reset\n    });\n  }\n\n  /**\n   * Sort table rows on th click\n   * @param field The field to sort by\n   * @param e event triggered by clicking th.sortable\n   */\n  sort(field, e) {\n    var rows = this.state.data.rows;\n    if (!rows) {\n      return;\n    }\n    this.state.field = field;\n    this.state.order = this.state.order === 'desc' ? 'asc' : 'desc';//reversed order\n\n    // Server side sort\n    if (this.props.fetchByPage) {\n      this.ajax();\n      return;\n    }\n\n    this.doSort(rows, field, this.state.order);\n\n    this.setState({\n      data: {rows: rows, total: rows.length, footer: this.state.data.footer}\n    });\n  }\n\n  /**\n   * Sort table rows on data load\n   * @param rows\n   */\n  sortOnLoad(rows) {\n    if (rows && rows.length) {\n      const {order, field} = this.state;\n      if (!order || !field) {\n        return;\n      }\n      this.doSort(rows, field, order);\n    }\n  }\n\n  /**\n   * Sort rows by field in a given order\n   * @param rows data to be sorted\n   * @param field\n   * @param order\n   */\n  doSort(rows, field, order) {\n    //todo for a derived field, value may be unavailable\n    rows.sort((a, b) => {//从小到大排列\n      const a1 = a[field],\n        b1 = b[field];\n      return a1 === b1 ? 0 : (a1 > b1 ? 1 : -1);\n    });\n    if (order === 'desc') {\n      rows.reverse();\n    }\n  }\n\n  /**\n   * Based on action , jump to a given page\n   * @param action\n   * @param inputVal\n   */\n  jump(action, inputVal) {\n    let {page, pageTotal: total} = this.state;\n\n    switch (action) {\n      case 'end':\n        page = total;\n        break;\n      case 'prev':\n        page--;\n        break;\n      case 'next':\n        page++;\n        break;\n      case 'jump':\n        page = +inputVal || 1;\n        break;\n      default:\n        page = 1;\n    }\n    if (page > total) {\n      page = total;\n    } else if (page < 1) {\n      page = 1;\n    }\n    page !== this.state.page && this.ajax(page);\n  }\n\n  /**\n   * Set row count per page\n   */\n  setPageSize(size) {\n    // Reload data from server\n    if (this.props.fetchByPage) {\n      this.ajax(1, size);\n      return;\n    }\n    this.setState({\n      rows: size,\n      page: 1,\n      pageTotal: Math.ceil(this.state.data.total / size || 1)\n    });\n\n  }\n\n  /**\n   * Select a tab\n   */\n  setTab(selectedTab) {\n    const fields = this.props.table.tabs[selectedTab].fields;\n    this.setState({selectedTab: selectedTab, fields});\n  }\n\n  /**\n   * Request parmas\n   * @param page pageNo\n   * @param rows pageSize\n   */\n  getParams(page, rows) {\n    return {//传向服务端的参数\n      page: page || this.state.page,\n      rows: rows || this.state.rows,\n      field: this.state.field,\n      order: this.state.order\n    };\n  }\n\n  /**\n   * Load data locally or remotely, depending on this.props.fetchByPage\n   * @param page pageNo\n   * @param rows pageSize\n   */\n  ajax(page, rows) {\n    if (!this.props.fetchByPage && page) {//数据全量获取\n      this.setState({page: page});\n      return;\n    }\n    const params = this.getParams(page, rows);\n    this.state.loadData && this.state.loadData(params, (data) => {\n      const s = {};\n      if (data.total < 1) {\n        s.loadingTip = '没有数据可展示';\n      }\n      s.data = data;\n\n      this.sortOnLoad(data.rows);\n\n      if (!this.state.fields.length) {// 没有配置fields. 根据返回的数据动态获取\n        if (data.rows.length) {\n          s.fields = Object.keys(data.rows[0]);\n          s.labelledFields = s.fields.reduce((p, v) => {\n            p[v] = {label: v};\n            return p;\n          }, {});\n        }\n      }\n\n\n      this.setState({\n        page: this.props.fetchByPage ? params.page : 1,\n        pageTotal: Math.ceil(data.total / this.state.rows || 1),\n        ...s,\n      });\n    });\n  }\n\n  /**\n   * Rows for current page\n   */\n  getRows() {\n    const page = this.state.page,\n      pageSize = this.state.rows,\n      rows = this.state.data.rows;\n    if (this.props.fetchByPage) {\n      return rows;\n    }\n    return rows.slice((page - 1) * pageSize, page * pageSize);\n  }\n}\n\nexport default NakedTable;\n"],"sourceRoot":""}