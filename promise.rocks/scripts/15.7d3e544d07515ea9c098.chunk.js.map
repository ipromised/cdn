{"version":3,"sources":["webpack:///./app/lib/NakedTable/Tabs.js","webpack:///./app/lib/NakedTable/THead.js","webpack:///./app/lib/NakedTable/TBody.js","webpack:///./app/lib/NakedTable/TFoot.js","webpack:///./app/lib/NakedTable/PaginationMixin.js","webpack:///./app/lib/NakedTable/Pagination.js","webpack:///./app/lib/NakedTable/NakedTable.js","webpack:///./app/components/containers/dynamic/Naked.js","webpack:///./app/lib/NakedTable/utils.js"],"names":["NakedTable_Tabs","react_default","a","Component","shouldComponentUpdate","nextProps","this","props","selectedTab","render","console","info","createElement","className","tabClass","tabNames","map","tab","index","key","onClick","setTab","bind","href","NakedTable_THead","order","componentDidMount","initTooltip","window","$","fn","tipsy","getDOMNode","gravity","live","title","getAttribute","html","sortingField","field","sortingOrder","fields","fieldsConfig","table","globallySortable","sortable","config","clz","Error","style","data-tip","tooltip","label","sort","NakedTable_TBody","rows","loadingTip","length","Object","utils","colSpan","buildRows","__webpack_require__","NakedTable_TFoot","NakedTable_PaginationMixin","jump","action","e","currentTarget","target","value","setPageSize","buildPageList","onChange","pageList","v","i","page","pageTotal","NakedTable_Pagination","constructor","super","assign","getPageInfo","textAlign","NakedTable_NakedTable","forEach","m","state","_getInitialState","data","tabs","t","handleFormSubmit","Math","ceil","total","showTabs","ajax","containerClass","Tabs","tableClass","THead","TBody","getRows","TFoot","footer","showPagination","Pagination","form","addEventListener","preventDefault","fetchByPage","doSort","setState","sortOnLoad","b","a1","b1","reverse","inputVal","size","getParams","params","loadData","s","pageSize","slice","lib_NakedTable_NakedTable","Naked_table","name","format","row","floor","random","toString","join","age","height","__webpack_exports__","push","toFixed","randomData","fieldNames","react__WEBPACK_IMPORTED_MODULE_0___default","ii","fmt","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"scripts/15.7d3e544d07515ea9c098.chunk.js","sourcesContent":["'use strict';\nimport React from \"react\";\n\n/**\n * Default Tabs component\n */\nclass Tabs extends React.Component {\n\n  /**\n   * only update when selectedTab changes\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selectedTab !== nextProps.selectedTab;\n  }\n\n  /**\n   * html structure:\n   * <ul>\n   *     <li class=\"active\"><a href=\"javascript:void(0)\">tab one</a></li>\n   *     <li><a href=\"javascript:void(0)\">tab two</a></li>\n   *     ...\n   * </ul>\n   */\n  render() {\n    console.info('Render=> tabs');\n\n    return <ul className={this.props.tabClass}>{\n      this.props.tabNames.map(function (tab, index) {\n        var props = {key: index};\n        if (this.props.selectedTab === index) {\n          props.className = 'active';\n        } else {\n          props.onClick = this.props.setTab.bind(this, index);\n        }\n        return <li {...props}>\n          <a href='javascript:void(0);'>{tab}</a>\n        </li>\n      }, this)\n    }\n    </ul>\n  }\n};\n\nexport default Tabs;\n","'use strict';\nimport React from \"react\";\n\n/**\n * THead component\n */\nclass THead extends React.Component {\n\n  /**\n   * Only update when selectedTab or order changes\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selectedTab != nextProps.selectedTab || this.props.order != nextProps.order\n  }\n\n  componentDidMount() {\n    this.initTooltip();\n  }\n\n  /**\n   * add tooltip\n   */\n  initTooltip() {\n    if (window.$ && $.fn.tipsy) {\n      $(this.getDOMNode()).tipsy({\n        gravity: 's',\n        live: '.naked-tooltip',\n        title: function () {\n          return this.getAttribute('data-tip');\n        },\n        html: true\n      });\n    }\n  }\n\n  /**\n   * html structure:\n   * <thead>\n   *     <tr>\n   *         <th>label one</th>\n   *         <th>label two</th>\n   *         <th>label three</th>\n   *         ...\n   *     </tr>\n   * </thead>\n   */\n  render() {\n    console.info('Render=> thead');\n    var sortingField = this.props.field,\n      sortingOrder = this.props.order,\n      fields = this.props.fields,\n      fieldsConfig = this.props.table.fields,\n      globallySortable = this.props.table.sortable;\n    return <thead>\n    <tr>{\n      fields.map(function (field, index) {\n        var config = fieldsConfig[field],\n          clz = sortingField === field ? sortingOrder : '';\n        if (!config) {\n          throw Error('field:' + field + ' not in fields list -> ', fields);\n        }\n        var props = {\n          key: index,\n          style: config.style,\n          className: 'naked-tooltip ' + clz,\n          'data-tip': config.tooltip || config.label\n        };\n        if (config.sortable || (globallySortable && config.sortable !== false)) {\n          props.className += ' sortable';\n          props.onClick = this.props.sort.bind(this, field);\n        }\n        return <th {...props}>{fieldsConfig[field].label}</th>\n      }, this)\n    }\n    </tr>\n    </thead>;\n  }\n};\n\nexport default THead;\n","'use strict';\nimport React from \"react\";\n\nimport buildRows from \"./utils\";\n\n/**\n * Default tbody component\n *\n * html structure:\n * <tbody>\n *     <tr>\n *         <td>text one</td>\n *         <td>text one</td>\n *         <td>text one</td>\n *         ...\n *     </tr>\n *     ...\n * </tbody>\n */\nclass TBody extends React.Component {\n  render() {\n    console.info('Render=> tbody');\n\n    const {fields, fieldsConfig, rows, loadingTip} = this.props;\n\n    if (rows && rows.length) {\n      return <tbody>{buildRows(rows, fields, fieldsConfig)}</tbody>;\n    }\n    return <tbody>\n    <tr>\n      <td colSpan={fields.length}>{loadingTip}</td>\n    </tr>\n    </tbody>;\n\n  }\n}\n\nexport default TBody;\n","'use strict';\nimport React from \"react\";\n\nvar buildRows = require(\"./utils\").buildRows;\n\n/**\n * Default tfoot component\n */\nclass TFoot extends React.Component {\n\n  /**\n   * only update when selectedTab changes\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selectedTab !== nextProps.selectedTab;\n  }\n\n  /**\n   * html structure:\n   * <tfoot>\n   *     <tr>\n   *         <td>text one</td>\n   *         <td>text one</td>\n   *         <td>text one</td>\n   *         ...\n   *     </tr>\n   *     ...\n   * </tfoot>\n   */\n  render() {\n    console.info('Render=> tfoot');\n\n    var rows = this.props.rows;\n    if (rows && rows.length) {\n      return <tfoot>{buildRows(rows, this.props.fields, this.props.table.fields)}</tfoot>;\n    }\n    return null;\n  }\n};\n\nexport default TFoot;\n","'use strict';\nimport React from \"react\";\n\n/**\n * Pagination utilities\n */\nconst PaginationMixin = {\n\n  /**\n   * jump to g given page\n   * @param action Possible values:start/prev/next/end/jump\n   * @param e Event triggered by an input change\n   */\n  jump: function (action, e) {\n    if (e.currentTarget.className !== 'disabled') {\n      this.props.jump(action, e.target.value);\n    }\n  },\n\n  /**\n   * set row count per page\n   * @param e\n   */\n  setPageSize: function (e) {\n    this.props.setPageSize(e.target.value);\n  },\n\n  /**\n   * page size options\n   *\n   * html structure:\n   * <select>\n   *     <option>5</option>\n   *     <option>10</option>\n   *     <option>15</option>\n   * </select>\n   *\n   * @returns {XML}\n   */\n  buildPageList: function () {\n    return <select onChange={this.setPageSize}>{\n      this.props.pageList.map(function (v, i) {\n        return <option>{v}</option>\n      })}\n    </select>\n  },\n\n  /**\n   * only update when pageNo changes\n   */\n  shouldComponentUpdate: function (nextProps) {\n    return this.props.page !== nextProps.page || this.props.pageTotal !== nextProps.pageTotal;\n  }\n};\n\nexport default PaginationMixin;\n","'use strict';\nimport React from \"react\";\n\nimport PaginationMixin from './PaginationMixin';\n\n/**\n * Default pagination component\n */\nclass Pagination extends React.Component {\n\n  constructor(props) {\n    super(props);\n    Object.assign(this, PaginationMixin);\n  }\n\n  getPageInfo() {\n    return this.props.page + '/' + this.props.pageTotal;\n  }\n\n  /**\n   * html structure:\n   * <ul>\n   *     <li>上一页</li>\n   *     <li>1/5</li>\n   *     <li>下一页</li>\n   * </li>\n   *\n   * @returns {XML}\n   */\n  render() {\n    console.info('Render=> pagination');\n\n    return <div style={{textAlign: 'right'}}>\n      <ul className='nt-pagination'>\n        <li onClick={this.jump.bind(this, 'prev')} className={this.props.page === 1 ? 'disabled' : null}>\n          <a href='javascript:void 0'>上一页</a>\n        </li>\n        <li>\n          {this.getPageInfo()}\n        </li>\n        <li onClick={this.jump.bind(this, 'next')}\n            className={this.props.page === this.props.pageTotal ? 'disabled' : null}>\n          <a href='javascript:void 0'>下一页 </a>\n        </li>\n      </ul>\n    </div>\n  }\n};\n\nexport default Pagination;\n","'use strict';\nimport React from \"react\";\n\nimport Tabs from './Tabs';\nimport THead from './THead';\nimport TBody from './TBody';\nimport TFoot from './TFoot';\nimport Pagination from './Pagination';\nimport './naked.css'\n\nclass NakedTable extends React.Component {\n  constructor(props) {\n    super(props);\n    ['setTab', 'sort', 'jump', 'setPageSize'].forEach(m => this[m] = this[m].bind(this));\n    this.state = this._getInitialState();\n  }\n\n  static defaultProps = {\n\n    Tabs, //Tabs component\n    THead, // THead component\n    TBody, // TBody component\n    TFoot, //TFoot component\n    Pagination, //Pagination component\n\n    containerClass: 'naked', // ClassName of this component\n    tabClass: 'nt-nav', // ClassName of Tabs component\n    tableClass: 'nt-table', // ClassName of table element\n    loadingTip: 'Loading ...', // Loading tip\n\n    tabNames: null,// Allow alternative tab names\n    selectedTab: 0, // Index of the active tab\n    form: null, // Used to provide extra params, optional\n    fetchByPage: false, // Whether fetch data by page\n    showPagination: true, // if false , Pagination component will be hidden\n    data: {total: 0, rows: []}, // Default data\n    order: null, // Sort in which order. Possible values: asc/desc\n    field: null, // Sort by which field\n    loadData: null,// used to load data\n  }\n\n  _getInitialState() {\n    const {table, data} = this.props;\n    const tabNames = this.props.tabNames || table.tabs.map(t => t.label);\n    table.pageList = table.pageList || [10];//10 rows per page by default\n\n    this.handleFormSubmit();\n\n    return {\n      data: data, // Table data\n      selectedTab: this.props.selectedTab, // Default tab\n      page: 1, // Default pageNo\n      rows: table.pageList[0], // Row count per page\n      pageTotal: Math.ceil(data.total / table.pageList[0]), // Page count\n      order: this.props.order,\n      field: this.props.field,\n      tabClass: table.tabClass || this.props.tabClass,\n      showTabs: tabNames && tabNames.length > 1,\n      fields: table.tabs[this.props.selectedTab].fields,\n      tabNames,\n    }\n  }\n\n  componentDidMount() {\n    console.info('----component mounted');\n    this.ajax();\n  }\n\n  render() {\n    const {showTabs, tabClass, tabNames, fields} = this.state;\n    const {table} = this.props;\n    console.info('Render=> table');\n\n    return <div className={this.props.containerClass}>\n      {showTabs && (<this.props.Tabs tabClass={tabClass} tabNames={tabNames}\n                                     selectedTab={this.state.selectedTab} setTab={this.setTab} table={table}/>)}\n      <table className={this.props.tableClass}>\n        <this.props.THead fields={fields} table={this.props.table} field={this.state.field}\n                          order={this.state.order} sort={this.sort} selectedTab={this.state.selectedTab}/>\n        <this.props.TBody fields={fields} fieldsConfig={this.props.table.fields} rows={this.getRows()}/>\n        <this.props.TFoot fields={fields} fieldsConfig={this.props.table.fields}\n                          rows={this.state.data.footer} selectedTab={this.state.selectedTab}/>\n      </table>\n      {this.props.showPagination && (\n        <this.props.Pagination pageList={this.props.table.pageList} total={this.state.data.total} page={this.state.page}\n                               pageTotal={this.state.pageTotal} jump={this.jump} setPageSize={this.setPageSize}/>)}\n    </div>\n  }\n\n\n  /**\n   * Reload table data on form submit\n   */\n  handleFormSubmit() {\n    if (!this.props.form) {\n      return;\n    }\n    this.props.form.addEventListener('submit', (e) => {\n      e.preventDefault();\n      this.ajax(1);// 1 : page reset\n    });\n  }\n\n  /**\n   * Sort table rows on th click\n   * @param field The field to sort by\n   * @param e event triggered by clicking th.sortable\n   */\n  sort(field, e) {\n    var rows = this.state.data.rows;\n    if (!rows) {\n      return;\n    }\n    this.state.field = field;\n    this.state.order = this.state.order === 'desc' ? 'asc' : 'desc';//reversed order\n\n    // Server side sort\n    if (this.props.fetchByPage) {\n      this.ajax();\n      return;\n    }\n\n    this.doSort(rows, field, this.state.order);\n\n    this.setState({\n      data: {rows: rows, total: rows.length, footer: this.state.data.footer}\n    });\n  }\n\n  /**\n   * Sort table rows on data load\n   * @param rows\n   */\n  sortOnLoad(rows) {\n    if (rows && rows.length) {\n      const {order, field} = this.state;\n      if (!order || !field) {\n        return;\n      }\n      this.doSort(rows, field, order);\n    }\n  }\n\n  /**\n   * Sort rows by field in a given order\n   * @param rows data to be sorted\n   * @param field\n   * @param order\n   */\n  doSort(rows, field, order) {\n    //todo for a derived field, value may be unavailable\n    rows.sort((a, b) => {//从小到大排列\n      const a1 = a[field],\n        b1 = b[field];\n      return a1 === b1 ? 0 : (a1 > b1 ? 1 : -1);\n    });\n    if (order === 'desc') {\n      rows.reverse();\n    }\n  }\n\n  /**\n   * Based on action , jump to a given page\n   * @param action\n   * @param inputVal\n   */\n  jump(action, inputVal) {\n    let {page, pageTotal: total} = this.state;\n\n    switch (action) {\n      case 'end':\n        page = total;\n        break;\n      case 'prev':\n        page--;\n        break;\n      case 'next':\n        page++;\n        break;\n      case 'jump':\n        page = +inputVal || 1;\n        break;\n      default:\n        page = 1;\n    }\n    if (page > total) {\n      page = total;\n    } else if (page < 1) {\n      page = 1;\n    }\n    page !== this.state.page && this.ajax(page);\n  }\n\n  /**\n   * Set row count per page\n   */\n  setPageSize(size) {\n    // Reload data from server\n    if (this.props.fetchByPage) {\n      this.ajax(1, size);\n      return;\n    }\n    this.setState({\n      rows: size,\n      page: 1,\n      pageTotal: Math.ceil(this.state.data.total / size || 1)\n    });\n\n  }\n\n  /**\n   * Select a tab\n   */\n  setTab(selectedTab) {\n    const fields = this.props.table.tabs[selectedTab].fields;\n    this.setState({selectedTab: selectedTab, fields});\n  }\n\n  /**\n   * Request parmas\n   * @param page pageNo\n   * @param rows pageSize\n   */\n  getParams(page, rows) {\n    return {//传向服务端的参数\n      page: page || this.state.page,\n      rows: rows || this.state.rows,\n      field: this.state.field,\n      order: this.state.order\n    };\n  }\n\n  /**\n   * Load data locally or remotely, depending on this.props.fetchByPage\n   * @param page pageNo\n   * @param rows pageSize\n   */\n  ajax(page, rows) {\n    if (!this.props.fetchByPage && page) {//数据全量获取\n      this.setState({page: page});\n      return;\n    }\n    const params = this.getParams(page, rows);\n    this.props.table.loadData && this.props.table.loadData(params, (data) => {\n      const s = {};\n      if (data.total < 1) {\n        s.loadingTip = '没有数据可展示';\n      }\n      s.data = data;\n\n      this.sortOnLoad(data.rows);\n      this.setState({\n        page: this.props.fetchByPage ? params.page : 1,\n        data: data,\n        pageTotal: Math.ceil(data.total / this.state.rows || 1)\n      });\n    });\n  }\n\n  /**\n   * Rows for current page\n   */\n  getRows() {\n    const page = this.state.page,\n      pageSize = this.state.rows,\n      rows = this.state.data.rows;\n    if (this.props.fetchByPage) {\n      return rows;\n    }\n    return rows.slice((page - 1) * pageSize, page * pageSize);\n  }\n}\n\nexport default NakedTable;\n","import React from \"react\";\nimport NakedTable from \"../../../lib/NakedTable/NakedTable\";\n\n\nconst table = {\n  fields: {\n    name: {\n      label: \"名称\",\n      tooltip: \"名称名称<span style='color:crimson'>名称名称</span>\",\n      format(value, field, row) {\n        return ['<span style=\"color:#', Math.floor(Math.random() * 16777215).toString(16), '\">', value, '</span>'].join(\"\");\n      }\n    },\n    age: {\n      label: \"年龄\",\n      sortable: true//this column is sortable\n    },\n    height: {\n      label: \"体重\",\n      sortable: true\n    }\n  },\n  tabs: [\n    {label: \"tab1\", fields: [\"name\", \"age\", \"height\"]},\n    {label: \"tab2\", fields: [\"name\", \"height\"]}\n  ],\n  pageList: [5, 7]\n};\n\nfunction randomData(total) {//generate random data\n  total = total || ~~(Math.random() * 100);\n  const rows = [];\n  for (let i = total; i > 0; i--) {\n    rows.push({\n      name: \"id_\" + Math.random(),\n      age: ~~(Math.random() * 100),\n      height: (Math.random() * 100).toFixed(2)\n    });\n  }\n  return {total: total, rows: rows};\n}\n\n\nclass Comp extends React.Component {\n\n  render() {\n    return <NakedTable data={randomData(15)} table={table} containerClass='naked container'/>\n  }\n}\n\nexport default Comp;\n","'use strict';\nimport React from \"react\";\n\n\n/**\n * html structure:\n * <tr>\n *     <td>text one</td>\n *     <td>text one</td>\n *     <td>text one</td>\n *     ...\n * </tr>\n * ...\n */\nexport default function buildRows(rows, fieldNames, fieldsConfig) {\n  return rows.map((row, i) => {\n    return <tr key={i}>{\n      fieldNames.map((field, ii) => {\n        var value = row['_' + field];//cache\n        if (value == null) {\n          value = row[field];\n          var fmt = fieldsConfig[field].format;\n          if (fmt) {\n            value = fmt(value, field, row);\n          }\n          row['_' + field] = value || '';\n        }\n        return <td key={ii} dangerouslySetInnerHTML={{__html: value}}/>\n      })}\n    </tr>;\n  })\n};\n"],"sourceRoot":""}