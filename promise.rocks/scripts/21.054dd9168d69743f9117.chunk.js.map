{"version":3,"sources":["webpack:///./app/components/containers/dynamic/PasteDelegate.js","webpack:///./app/components/containers/dynamic/基金重仓股分析.js","webpack:///./app/api/misc.js","webpack:///../node_modules/regenerator-runtime/runtime.js"],"names":["PasteDelegate","React","Component","constructor","props","super","this","state","text","handlePaste","bind","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","items","clipboardData","getAsString","dealWith","setState","render","className","children","Comp","loading","respond","then","data","res","cors","decoder","TextDecoder","parser","DOMParser","buf","arrayBuffer","dataView","DataView","html","decode","num","split","interested","filter","v","trim","stocks","match","stock","some","includes","map","replace","seq","symbol","name","fund_count","promised_funds","Promise","all","async","date","detail_res","detail_buf","detail_html","detail_table","exec","parseFromString","firstChild","cells","textContent","fetch_funds","i","entries","funds","stat","Map","fund_map","stock_map","set","fund","prev","get","Set","add","sort","a","b","size","fund_symbol","stock_symbols","test","slice","style","whiteSpace","dangerouslySetInnerHTML","__html","key","colSpan","length","goFetch","path","conf","fetch","url","fetchNotices","JSON","parse","getToken","sessionStorage","token","setToken","runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","value","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","iter","toString","keys","object","reverse","pop","skipTempReset","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"8FAAA,2BAsCeA,UApCf,cAA4BC,IAAMC,UAChCC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CAACC,KAAM,IACpBF,KAAKG,YAAcH,KAAKG,YAAYC,KAAKJ,MAG3CK,oBACEC,SAASC,iBAAiB,QAASP,KAAKG,aAG1CK,uBACEF,SAASG,oBAAoB,QAAST,KAAKG,aAG7CA,YAAYO,GACV,MAAMC,EAAQD,EAAEE,cAAcD,MAC1BA,GACFA,EAAM,GAAGE,YAAYX,IACnBF,KAAKc,SAASZ,KAKpBY,SAASZ,GACPF,KAAKe,SAAS,CAACb,SAGjBc,SACE,OAAO,0BAAMC,UAAU,aACpBjB,KAAKF,MAAMoB,SAASlB,KAAKC,W,iCChChC,oDAuJekB,UAjJf,cAAmBzB,UAEjBG,YAAYC,GACVC,MAAMD,GAGRO,oBACEN,MAAMM,oBAGRF,YAAYO,GACV,GAAIV,KAAKC,MAAMmB,QACb,OAEF,MAAMT,EAAQD,EAAEE,cAAcD,MAC1BA,GACFA,EAAM,GAAGE,YAAYX,IACnBF,KAAKe,SAAS,CAACK,SAAS,IACxBpB,KAAKqB,QAAQnB,GACVoB,KAAKC,IACJvB,KAAKe,SAAS,CAACb,OAAMqB,OAAMH,SAAS,QAM9C,cAAclB,GACZ,IAAKA,EACH,MAAO,GAET,MAAMsB,QAAYC,YAAK,+CAEjBC,EAAU,IAAIC,YAAY,OAC1BC,EAAS,IAAIC,UAEbC,QAAYN,EAAIO,cAChBC,EAAW,IAAIC,SAASH,GAExBI,EAAOR,EAAQS,OAAOH,GACtBI,GAAOlC,EAAKmC,MAAM,KAAK,IAAM,GAE7BC,EAAapC,EAAKmC,MAAM,KAAK,GAAGA,MAAM,UAAUE,OAAOC,GAAKA,EAAEC,QAC9DC,EAASR,EAAKS,MAAM,qBAAqBJ,OAAOK,GAASN,EAAWO,KAAKL,GAAKI,EAAME,SAASN,KAAKO,IAAIH,GACjGA,EAAMI,QAAQ,eAAgB,MAAMA,QAAQ,KAAM,KAE3DD,IAAIH,IACF,MAAOK,EAAKC,EAAQC,EAAMC,GAAcR,EAAMP,MAAM,KACpD,MAAO,CACLa,SACAC,OACAC,gBAKAC,QAAuBC,QAAQC,IAAIb,EAAOK,IAAIH,IAmCpDY,eAA2BN,EAAQO,EAAO,YACxC,MAAMC,QAAmBjC,iDAA0CgC,KAAQP,WACrES,QAAmBD,EAAW3B,cAC9B6B,EAAclC,EAAQS,OAAO,IAAIF,SAAS0B,KACzCE,GAAgB,qCAAqCC,KAAKF,GAWjE,MAPc,IAFFhC,EAAOmC,gBAAgBF,EAAab,QAAQ,qBAAsB,IAAK,mBAE7DgB,WAAW9C,UAAU6B,IAAI,EAAE7B,SAAU+C,MAChD,CACLf,OAAQe,EAAM,GAAGC,YACjBf,KAAMc,EAAM,GAAGC,gBA9CsCC,CAAYvB,EAAMM,UAC/E,IAAK,IAAKkB,EAAGxB,KAAUF,EAAO2B,UAC5BzB,EAAM0B,MAAQjB,EAAee,GAI/B,MAAMG,EAAO,IAAIC,IAEXC,EAAW,IAAID,IAEfE,EAAY,IAAIF,IAEtB,IAAK,IAAI5B,KAASF,EAAQ,CACxBgC,EAAUC,IAAI/B,EAAMM,OAAQN,GAC5B,IAAK,IAAIgC,KAAQhC,EAAM0B,MAAO,CAC5BG,EAASE,IAAIC,EAAK1B,OAAQ0B,GAC1B,MAAMC,EAAON,EAAKO,IAAIF,EAAK1B,SAAW,IAAI6B,IAC1CF,EAAKG,IAAIpC,EAAMM,QACfqB,EAAKI,IAAIC,EAAK1B,OAAQ2B,IAY1B,MARa,IAAIN,GAAMU,KAAK,CAACC,EAAGC,IACrBA,EAAE,GAAGC,KAAOF,EAAE,GAAGE,MAE1BrC,IAAI,EAAEsC,EAAaC,KACV,IAAIb,EAASK,IAAIO,GAAalC,QAAQkC,QAAmB,IAAIC,GAAevC,IAAIP,MAAQkC,EAAUI,IAAItC,GAAGW,QAAQX,QAE1HD,OAAOC,IAAM,WAAW+C,KAAK/C,EAAE,KAAKgD,MAAM,EAAGpD,GA0BjDpB,SACE,MAAM,QAACI,GAAWpB,KAAKC,MACjBC,EAAOF,KAAKC,MAAMC,MAAS,eACjC,GAAIkB,EACF,OAAO,0BAAMH,UAAU,aACrB,yBAAKwE,MAAO,CAACC,WAAY,OAAQC,wBAAyB,CAACC,OAAQ1F,KACnE,6BACA,sCAIJ,MAAMqB,EAAOvB,KAAKC,MAAMsB,MAAQ,GAChC,OAAO,0BAAMN,UAAU,aACrB,yBAAKwE,MAAO,CAACC,WAAY,OAAQC,wBAAyB,CAACC,OAAQ1F,KACnE,6BACA,mCAAQ,sCAAR,IAA4B,yCAA5B,SACA,iCACGqB,EAAKwB,IAAI6B,GACD,2BAAO3D,UAAU,oBAAoB4E,IAAKjB,EAAK,IACpD,+BACA,4BACE,wBAAIkB,QAASlB,EAAKmB,OAAS,GAAInB,EAAK,MAGtC,+BACA,4BACGA,EAAKY,MAAM,GAAGzC,IAAIP,GAAK,wBAAIqD,IAAKrD,GAAIA,a,iCC7InD,sKAAMd,EAAU,IAAIC,YAAY,OAEzB,SAASqE,EAAQC,EAAMC,GAC5B,OAAOC,MAAM,UAAYF,EAAMC,GAO1B,SAASzE,EAAK2E,GACnB,OAAOD,MAAM,qBAAuBC,GAO/B5C,eAAe6C,EAAanD,EAAQkC,EAAO,GAChD,MAAMgB,8DAAkElD,qCAA0CkC,YAC5G5D,QAAYC,EAAK2E,GACjBtE,QAAYN,EAAIO,cAChBC,EAAW,IAAIC,SAASH,GAExB5B,EAAOwB,EAAQS,OAAOH,GAC5B,OAAOsE,KAAKC,MAAMrG,EAAKsF,MAAM,GAAI,IAG5B,SAASgB,IACd,OAAOC,eAAeC,MAGjB,SAASC,EAASD,GACvBD,eAAeC,MAAQA,I,oBC1BzB,IAAIE,EAAW,SAAUC,GACvB,aAEA,IAEIC,EAFAC,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IAAIC,EAAiBH,GAAWA,EAAQb,qBAAqBiB,EAAYJ,EAAUI,EAC/EC,EAAYnB,OAAOoB,OAAOH,EAAehB,WACzCoB,EAAU,IAAIC,EAAQN,GAAe,IAMzC,OAFAG,EAAUI,QAkMZ,SAA0BV,EAASE,EAAMM,GACvC,IAAIpI,EAAQuI,EAEZ,OAAO,SAAgBC,EAAQC,GAC7B,GAAIzI,IAAU0I,EACZ,MAAM,IAAIC,MAAM,gCAGlB,GAAI3I,IAAU4I,EAAmB,CAC/B,GAAe,UAAXJ,EACF,MAAMC,EAKR,OAAOI,IAMT,IAHAT,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,CACX,IAAIK,EAAWV,EAAQU,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUV,GACnD,GAAIW,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBX,EAAQI,OAGVJ,EAAQc,KAAOd,EAAQe,MAAQf,EAAQK,SAElC,GAAuB,UAAnBL,EAAQI,OAAoB,CACrC,GAAIxI,IAAUuI,EAEZ,MADAvI,EAAQ4I,EACFR,EAAQK,IAGhBL,EAAQgB,kBAAkBhB,EAAQK,SAEN,WAAnBL,EAAQI,QACjBJ,EAAQiB,OAAO,SAAUjB,EAAQK,KAGnCzI,EAAQ0I,EAER,IAAIY,EAASC,EAAS3B,EAASE,EAAMM,GACrC,GAAoB,WAAhBkB,EAAOE,KAAmB,CAO5B,GAJAxJ,EAAQoI,EAAQqB,KACZb,EACAc,EAEAJ,EAAOb,MAAQQ,EACjB,SAGF,MAAO,CACLU,MAAOL,EAAOb,IACdgB,KAAMrB,EAAQqB,MAGS,UAAhBH,EAAOE,OAChBxJ,EAAQ4I,EAGRR,EAAQI,OAAS,QACjBJ,EAAQK,IAAMa,EAAOb,OA1QPmB,CAAiBhC,EAASE,EAAMM,GAE7CF,EAcT,SAASqB,EAASM,EAAIC,EAAKrB,GACzB,IACE,MAAO,CAAEe,KAAM,SAAUf,IAAKoB,EAAGE,KAAKD,EAAKrB,IAC3C,MAAOuB,GACP,MAAO,CAAER,KAAM,QAASf,IAAKuB,IAhBjCpD,EAAQe,KAAOA,EAoBf,IAAIY,EAAyB,iBACzBmB,EAAyB,iBACzBhB,EAAoB,YACpBE,EAAoB,YAIpBK,EAAmB,GAMvB,SAAShB,KACT,SAASgC,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkB9C,GAAkB,WAClC,OAAOtH,MAGT,IAAIqK,EAAWrD,OAAOsD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BxD,GAC5BG,EAAO8C,KAAKO,EAAyBjD,KAGvC8C,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2BlD,UAClCiB,EAAUjB,UAAYD,OAAOoB,OAAOgC,GAQtC,SAASM,EAAsBzD,GAC7B,CAAC,OAAQ,QAAS,UAAU0D,QAAQ,SAASlC,GAC3CxB,EAAUwB,GAAU,SAASC,GAC3B,OAAO1I,KAAKuI,QAAQE,EAAQC,MAoClC,SAASkC,EAAczC,GAgCrB,IAAI0C,EAgCJ7K,KAAKuI,QA9BL,SAAiBE,EAAQC,GACvB,SAASoC,IACP,OAAO,IAAIxH,QAAQ,SAASyH,EAASC,IAnCzC,SAASC,EAAOxC,EAAQC,EAAKqC,EAASC,GACpC,IAAIzB,EAASC,EAASrB,EAAUM,GAASN,EAAWO,GACpD,GAAoB,UAAhBa,EAAOE,KAEJ,CACL,IAAIyB,EAAS3B,EAAOb,IAChBkB,EAAQsB,EAAOtB,MACnB,OAAIA,GACiB,iBAAVA,GACP1C,EAAO8C,KAAKJ,EAAO,WACdtG,QAAQyH,QAAQnB,EAAMuB,SAAS7J,KAAK,SAASsI,GAClDqB,EAAO,OAAQrB,EAAOmB,EAASC,IAC9B,SAASf,GACVgB,EAAO,QAAShB,EAAKc,EAASC,KAI3B1H,QAAQyH,QAAQnB,GAAOtI,KAAK,SAAS8J,GAI1CF,EAAOtB,MAAQwB,EACfL,EAAQG,IACP,SAASG,GAGV,OAAOJ,EAAO,QAASI,EAAON,EAASC,KAvBzCA,EAAOzB,EAAOb,KAiCZuC,CAAOxC,EAAQC,EAAKqC,EAASC,KAIjC,OAAOH,EAaLA,EAAkBA,EAAgBvJ,KAChCwJ,EAGAA,GACEA,KA+GV,SAAS7B,EAAoBF,EAAUV,GACrC,IAAII,EAASM,EAASxB,SAASc,EAAQI,QACvC,GAAIA,IAAW3B,EAAW,CAKxB,GAFAuB,EAAQU,SAAW,KAEI,UAAnBV,EAAQI,OAAoB,CAE9B,GAAIM,EAASxB,SAAiB,SAG5Bc,EAAQI,OAAS,SACjBJ,EAAQK,IAAM5B,EACdmC,EAAoBF,EAAUV,GAEP,UAAnBA,EAAQI,QAGV,OAAOS,EAIXb,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAI4C,UAChB,kDAGJ,OAAOpC,EAGT,IAAIK,EAASC,EAASf,EAAQM,EAASxB,SAAUc,EAAQK,KAEzD,GAAoB,UAAhBa,EAAOE,KAIT,OAHApB,EAAQI,OAAS,QACjBJ,EAAQK,IAAMa,EAAOb,IACrBL,EAAQU,SAAW,KACZG,EAGT,IAAIqC,EAAOhC,EAAOb,IAElB,OAAM6C,EAOFA,EAAK7B,MAGPrB,EAAQU,EAASyC,YAAcD,EAAK3B,MAGpCvB,EAAQoD,KAAO1C,EAAS2C,QAQD,WAAnBrD,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,IAAM5B,GAUlBuB,EAAQU,SAAW,KACZG,GANEqC,GA3BPlD,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAI4C,UAAU,oCAC5BjD,EAAQU,SAAW,KACZG,GAoDX,SAASyC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB5L,KAAKkM,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAItC,EAASsC,EAAMQ,YAAc,GACjC9C,EAAOE,KAAO,gBACPF,EAAOb,IACdmD,EAAMQ,WAAa9C,EAGrB,SAASjB,EAAQN,GAIfhI,KAAKkM,WAAa,CAAC,CAAEJ,OAAQ,SAC7B9D,EAAY2C,QAAQgB,EAAc3L,MAClCA,KAAKsM,OAAM,GA8Bb,SAAS9B,EAAO+B,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASjF,GAC9B,GAAIkF,EACF,OAAOA,EAAexC,KAAKuC,GAG7B,GAA6B,mBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASxG,QAAS,CAC3B,IAAI3B,GAAK,EAAGqH,EAAO,SAASA,IAC1B,OAASrH,EAAImI,EAASxG,QACpB,GAAImB,EAAO8C,KAAKuC,EAAUnI,GAGxB,OAFAqH,EAAK7B,MAAQ2C,EAASnI,GACtBqH,EAAK/B,MAAO,EACL+B,EAOX,OAHAA,EAAK7B,MAAQ9C,EACb2E,EAAK/B,MAAO,EAEL+B,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAM3C,GAIjB,SAASA,IACP,MAAO,CAAEc,MAAO9C,EAAW4C,MAAM,GA+MnC,OAxmBAQ,EAAkBjD,UAAYwD,EAAG5K,YAAcsK,EAC/CA,EAA2BtK,YAAcqK,EACzCC,EAA2BzC,GACzBwC,EAAkBwC,YAAc,oBAYlC7F,EAAQ8F,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAO/M,YAClD,QAAOgN,IACHA,IAAS3C,GAG2B,uBAAnC2C,EAAKH,aAAeG,EAAK1J,QAIhC0D,EAAQiG,KAAO,SAASF,GAUtB,OATI5F,OAAO+F,eACT/F,OAAO+F,eAAeH,EAAQzC,IAE9ByC,EAAOI,UAAY7C,EACbzC,KAAqBkF,IACzBA,EAAOlF,GAAqB,sBAGhCkF,EAAO3F,UAAYD,OAAOoB,OAAOqC,GAC1BmC,GAOT/F,EAAQoG,MAAQ,SAASvE,GACvB,MAAO,CAAEyC,QAASzC,IAsEpBgC,EAAsBE,EAAc3D,WACpC2D,EAAc3D,UAAUO,GAAuB,WAC7C,OAAOxH,MAET6G,EAAQ+D,cAAgBA,EAKxB/D,EAAQrD,MAAQ,SAASqE,EAASC,EAASC,EAAMC,GAC/C,IAAIkF,EAAO,IAAItC,EACbhD,EAAKC,EAASC,EAASC,EAAMC,IAG/B,OAAOnB,EAAQ8F,oBAAoB7E,GAC/BoF,EACAA,EAAKzB,OAAOnK,KAAK,SAAS4J,GACxB,OAAOA,EAAOxB,KAAOwB,EAAOtB,MAAQsD,EAAKzB,UAuKjDf,EAAsBD,GAEtBA,EAAG/C,GAAqB,YAOxB+C,EAAGnD,GAAkB,WACnB,OAAOtH,MAGTyK,EAAG0C,SAAW,WACZ,MAAO,sBAkCTtG,EAAQuG,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIvH,KAAOwH,EACdD,EAAKjB,KAAKtG,GAMZ,OAJAuH,EAAKE,UAIE,SAAS7B,IACd,KAAO2B,EAAKrH,QAAQ,CAClB,IAAIF,EAAMuH,EAAKG,MACf,GAAI1H,KAAOwH,EAGT,OAFA5B,EAAK7B,MAAQ/D,EACb4F,EAAK/B,MAAO,EACL+B,EAQX,OADAA,EAAK/B,MAAO,EACL+B,IAsCX5E,EAAQ2D,OAASA,EAMjBlC,EAAQrB,UAAY,CAClBpH,YAAayI,EAEbgE,MAAO,SAASkB,GAcd,GAbAxN,KAAK6E,KAAO,EACZ7E,KAAKyL,KAAO,EAGZzL,KAAKmJ,KAAOnJ,KAAKoJ,MAAQtC,EACzB9G,KAAK0J,MAAO,EACZ1J,KAAK+I,SAAW,KAEhB/I,KAAKyI,OAAS,OACdzI,KAAK0I,IAAM5B,EAEX9G,KAAKkM,WAAWvB,QAAQyB,IAEnBoB,EACH,IAAK,IAAIrK,KAAQnD,KAEQ,MAAnBmD,EAAKsK,OAAO,IACZvG,EAAO8C,KAAKhK,KAAMmD,KACjBsJ,OAAOtJ,EAAKqC,MAAM,MACrBxF,KAAKmD,GAAQ2D,IAMrB4G,KAAM,WACJ1N,KAAK0J,MAAO,EAEZ,IACIiE,EADY3N,KAAKkM,WAAW,GACLG,WAC3B,GAAwB,UAApBsB,EAAWlE,KACb,MAAMkE,EAAWjF,IAGnB,OAAO1I,KAAK4N,MAGdvE,kBAAmB,SAASwE,GAC1B,GAAI7N,KAAK0J,KACP,MAAMmE,EAGR,IAAIxF,EAAUrI,KACd,SAAS8N,EAAOC,EAAKC,GAYnB,OAXAzE,EAAOE,KAAO,QACdF,EAAOb,IAAMmF,EACbxF,EAAQoD,KAAOsC,EAEXC,IAGF3F,EAAQI,OAAS,OACjBJ,EAAQK,IAAM5B,KAGNkH,EAGZ,IAAK,IAAI5J,EAAIpE,KAAKkM,WAAWnG,OAAS,EAAG3B,GAAK,IAAKA,EAAG,CACpD,IAAIyH,EAAQ7L,KAAKkM,WAAW9H,GACxBmF,EAASsC,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOgC,EAAO,OAGhB,GAAIjC,EAAMC,QAAU9L,KAAK6E,KAAM,CAC7B,IAAIoJ,EAAW/G,EAAO8C,KAAK6B,EAAO,YAC9BqC,EAAahH,EAAO8C,KAAK6B,EAAO,cAEpC,GAAIoC,GAAYC,EAAY,CAC1B,GAAIlO,KAAK6E,KAAOgH,EAAME,SACpB,OAAO+B,EAAOjC,EAAME,UAAU,GACzB,GAAI/L,KAAK6E,KAAOgH,EAAMG,WAC3B,OAAO8B,EAAOjC,EAAMG,iBAGjB,GAAIiC,GACT,GAAIjO,KAAK6E,KAAOgH,EAAME,SACpB,OAAO+B,EAAOjC,EAAME,UAAU,OAG3B,KAAImC,EAMT,MAAM,IAAItF,MAAM,0CALhB,GAAI5I,KAAK6E,KAAOgH,EAAMG,WACpB,OAAO8B,EAAOjC,EAAMG,gBAU9B1C,OAAQ,SAASG,EAAMf,GACrB,IAAK,IAAItE,EAAIpE,KAAKkM,WAAWnG,OAAS,EAAG3B,GAAK,IAAKA,EAAG,CACpD,IAAIyH,EAAQ7L,KAAKkM,WAAW9H,GAC5B,GAAIyH,EAAMC,QAAU9L,KAAK6E,MACrBqC,EAAO8C,KAAK6B,EAAO,eACnB7L,KAAK6E,KAAOgH,EAAMG,WAAY,CAChC,IAAImC,EAAetC,EACnB,OAIAsC,IACU,UAAT1E,GACS,aAATA,IACD0E,EAAarC,QAAUpD,GACvBA,GAAOyF,EAAanC,aAGtBmC,EAAe,MAGjB,IAAI5E,EAAS4E,EAAeA,EAAa9B,WAAa,GAItD,OAHA9C,EAAOE,KAAOA,EACdF,EAAOb,IAAMA,EAETyF,GACFnO,KAAKyI,OAAS,OACdzI,KAAKyL,KAAO0C,EAAanC,WAClB9C,GAGFlJ,KAAKoO,SAAS7E,IAGvB6E,SAAU,SAAS7E,EAAQ0C,GACzB,GAAoB,UAAhB1C,EAAOE,KACT,MAAMF,EAAOb,IAcf,MAXoB,UAAhBa,EAAOE,MACS,aAAhBF,EAAOE,KACTzJ,KAAKyL,KAAOlC,EAAOb,IACM,WAAhBa,EAAOE,MAChBzJ,KAAK4N,KAAO5N,KAAK0I,IAAMa,EAAOb,IAC9B1I,KAAKyI,OAAS,SACdzI,KAAKyL,KAAO,OACa,WAAhBlC,EAAOE,MAAqBwC,IACrCjM,KAAKyL,KAAOQ,GAGP/C,GAGTmF,OAAQ,SAASrC,GACf,IAAK,IAAI5H,EAAIpE,KAAKkM,WAAWnG,OAAS,EAAG3B,GAAK,IAAKA,EAAG,CACpD,IAAIyH,EAAQ7L,KAAKkM,WAAW9H,GAC5B,GAAIyH,EAAMG,aAAeA,EAGvB,OAFAhM,KAAKoO,SAASvC,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACP3C,IAKb,MAAS,SAAS4C,GAChB,IAAK,IAAI1H,EAAIpE,KAAKkM,WAAWnG,OAAS,EAAG3B,GAAK,IAAKA,EAAG,CACpD,IAAIyH,EAAQ7L,KAAKkM,WAAW9H,GAC5B,GAAIyH,EAAMC,SAAWA,EAAQ,CAC3B,IAAIvC,EAASsC,EAAMQ,WACnB,GAAoB,UAAhB9C,EAAOE,KAAkB,CAC3B,IAAI6E,EAAS/E,EAAOb,IACpB0D,EAAcP,GAEhB,OAAOyC,GAMX,MAAM,IAAI1F,MAAM,0BAGlB2F,cAAe,SAAShC,EAAUf,EAAYE,GAa5C,OAZA1L,KAAK+I,SAAW,CACdxB,SAAUiD,EAAO+B,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhB1L,KAAKyI,SAGPzI,KAAK0I,IAAM5B,GAGNoC,IAQJrC,EAvrBK,CA8rBiB2H,EAAO3H,SAGtC,IACE4H,mBAAqB7H,EACrB,MAAO8H,GAUPC,SAAS,IAAK,yBAAdA,CAAwC/H","file":"scripts/21.054dd9168d69743f9117.chunk.js","sourcesContent":["import React from \"react\"\n\nclass PasteDelegate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {text: ''};\n    this.handlePaste = this.handlePaste.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"paste\", this.handlePaste)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"paste\", this.handlePaste);\n  }\n\n  handlePaste(e) {\n    const items = e.clipboardData.items;\n    if (items) {\n      items[0].getAsString(text => {\n        this.dealWith(text)\n      });\n    }\n  }\n\n  dealWith(text) {\n    this.setState({text});\n  }\n\n  render() {\n    return <main className=\"container\">\n      {this.props.children(this.state)}\n    </main>\n  }\n}\n\n\nexport default PasteDelegate;\n","import 'regenerator-runtime/runtime';\nimport React from \"react\"\nimport PasteDelegate from './PasteDelegate';\n\nimport {cors} from \"../../../api/misc\";\n\nclass Comp extends PasteDelegate {\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n  }\n\n  handlePaste(e) {\n    if (this.state.loading) {\n      return;\n    }\n    const items = e.clipboardData.items;\n    if (items) {\n      items[0].getAsString(text => {\n        this.setState({loading: true});\n        this.respond(text)\n          .then(data => {\n            this.setState({text, data, loading: false});\n          })\n      });\n    }\n  }\n\n  async respond(text) {\n    if (!text) {\n      return []\n    }\n    const res = await cors('http://fund.jrj.com.cn/action/fhs/list.jspa');\n\n    const decoder = new TextDecoder('gbk');\n    const parser = new DOMParser();\n\n    const buf = await res.arrayBuffer();\n    const dataView = new DataView(buf);\n\n    const html = decoder.decode(dataView);\n    const num = +text.split('|')[1] || 10;\n\n    const interested = text.split('|')[0].split(/,|，|\\s/).filter(v => v.trim());\n    const stocks = html.match(/JSON_DATA.push.+/g).filter(stock => interested.some(v => stock.includes(v))).map(stock => {\n        return stock.replace(/.+\\[(.+)\\].+/, '$1').replace(/\"/g, '');\n      }\n    ).map(stock => {\n        const [seq, symbol, name, fund_count] = stock.split(',');\n        return {\n          symbol,\n          name,\n          fund_count\n        };\n      }\n    );\n    // 使用Promise.all达到并发请求的目的\n    const promised_funds = await Promise.all(stocks.map(stock => fetch_funds(stock.symbol)));\n    for (let [i, stock] of stocks.entries()) {\n      stock.funds = promised_funds[i];\n    }\n\n    // {股票代码:[基金代码]}\n    const stat = new Map;\n    // {基金代码:{name:基金名称}}\n    const fund_map = new Map;\n    // {股票代码:{name:股票名称}}\n    const stock_map = new Map;\n\n    for (let stock of stocks) {\n      stock_map.set(stock.symbol, stock);\n      for (let fund of stock.funds) {\n        fund_map.set(fund.symbol, fund);\n        const prev = stat.get(fund.symbol) || new Set;\n        prev.add(stock.symbol);\n        stat.set(fund.symbol, prev);\n      }\n    }\n\n    const data = [...stat].sort((a, b) => {\n        return b[1].size - a[1].size;\n      }\n    ).map(([fund_symbol, stock_symbols]) => {\n        return [`${fund_map.get(fund_symbol).name}(${fund_symbol})`, ...[...stock_symbols].map(v => `${stock_map.get(v).name}(${v})`)]\n      }\n    ).filter(v => !/指数|沪深300/.test(v[0])).slice(0, num);\n\n    return data;\n\n    /**\n     获取给定报告期内给定股票的持有基金列表\n     */\n    async function fetch_funds(symbol, date = '20170930') {\n      const detail_res = await cors(`http://fund.jrj.com.cn/fhs/detail/${date}/${symbol}.shtml`);\n      const detail_buf = await detail_res.arrayBuffer();\n      const detail_html = decoder.decode(new DataView(detail_buf));\n      const [detail_table] = /<table>\\s*.+基金代码[\\s\\S]+?<\\/table>/g.exec(detail_html);\n\n      const doc = parser.parseFromString(detail_table.replace(/<tr>[\\s\\S]+?<\\/tr>/, ''), \"application/xml\");\n\n      const funds = [...doc.firstChild.children].map(({children: cells}) => {\n          return {\n            symbol: cells[0].textContent,\n            name: cells[1].textContent\n          }\n        }\n      );\n      return funds;\n    }\n  }\n\n  render() {\n    const {loading} = this.state;\n    const text = this.state.text || `请将股票名称粘贴在本页面`;\n    if (loading) {\n      return <main className=\"container\">\n        <pre style={{whiteSpace: 'pre'}} dangerouslySetInnerHTML={{__html: text}}/>\n        <hr/>\n        <p>加载中...</p>\n      </main>\n    }\n\n    const data = this.state.data || [];\n    return <main className=\"container\">\n      <pre style={{whiteSpace: 'pre'}} dangerouslySetInnerHTML={{__html: text}}/>\n      <hr/>\n      <p>已过滤含有<strong>指数</strong>及<strong>沪深300</strong>字眼的基金</p>\n      <section>\n        {data.map(fund => {\n          return <table className='table is-bordered' key={fund[0]}>\n            <thead>\n            <tr>\n              <th colSpan={fund.length - 1}>{fund[0]}</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              {fund.slice(1).map(v => <td key={v}>{v}</td>)}\n            </tr>\n            </tbody>\n          </table>\n        })}\n      </section>\n    </main>\n  }\n}\n\nexport default Comp;\n","const decoder = new TextDecoder('gbk');\n\nexport function goFetch(path, conf) {\n  return fetch('/go-api' + path, conf);\n}\n\n\n/**\n * 方便跨域请求\n */\nexport function cors(url) {\n  return fetch('/go-api/play/cors?' + url);\n}\n\n\n/**\n * 获取股票公告\n */\nexport async function fetchNotices(symbol, size = 5) {\n  const url = `http://data.eastmoney.com/notices/getdata.ashx?StockCode=${symbol}&CodeType=1&PageIndex=1&PageSize=${size}&jsObj=a`;\n  const res = await cors(url);\n  const buf = await res.arrayBuffer();\n  const dataView = new DataView(buf);\n\n  const text = decoder.decode(dataView);\n  return JSON.parse(text.slice(7, -1));\n}\n\nexport function getToken() {\n  return sessionStorage.token;\n}\n\nexport function setToken(token) {\n  sessionStorage.token = token;\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}