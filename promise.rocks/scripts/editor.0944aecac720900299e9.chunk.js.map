{"version":3,"sources":["webpack:///./app/components/views/Write.js","webpack:///./app/components/containers/EditorContainer.js","webpack:///./app/actions/editorActions.js","webpack:///./app/lib/editor.js"],"names":["Write","props","onScroll","handleScroll","id","onMouseEnter","e","handleMouseEnter","className","dangerouslySetInnerHTML","__html","md","render","content","mapDispatchToProps","mouseEnter","mouseEntered","type","MOUSE_ENTERED","changeMarkdown","getMarkdown","connect","store","editorState","React","Component","componentDidMount","this","bind","editor","_editor","getEditor","on","getValue","setValue","match","params","componentWillUnmount","off","componentDidUpdate","forceUpdate","document","title","out","getElementById","input","querySelector","target","window","requestAnimationFrame","leftHeight","scrollHeight","rightHeight","offsetHeight","scrollTop","CodeMirror","require","module","exports","fromTextArea","mode","lineNumbers","matchBrackets","lineWrapping","theme","extraKeys"],"mappings":"wJAsBeA,MAjBDC,GACL,yBAAKC,SAAUD,EAAME,cAC1B,yBAAKC,GAAG,KAAKC,aAAeC,IAC1BL,EAAMM,iBAAiB,WAEvB,8BACE,8BAAUH,GAAG,WAGjB,yBAAKI,UAAU,gBAAgBJ,GAAG,MAAMK,wBAAyB,CAACC,OAAQC,IAAGC,OAAOX,EAAMY,SAAW,KAChGR,aAAeC,IACbL,EAAMM,iBAAiB,c,yOC2ClC,MAIMO,EAAqB,CACzBC,WCzDK,SAAoBC,GACzB,MAAO,CACLC,KAAMC,IACNF,iBDuDFG,mBACAC,iBAGaC,4BAVSC,GACfA,EAAMC,YASyBT,EAAzBO,CA5Df,cAA8BG,IAAMC,UAClCC,oBACEC,KAAKxB,aAAewB,KAAKxB,aAAayB,KAAKD,MAC3C,MAAME,EAASF,KAAKG,QAAUC,IAAU,QACxCF,EAAOG,GAAG,SAAU1B,IAClBqB,KAAK1B,MAAMkB,eAAeb,EAAE2B,cAE9BJ,EAAOK,SAASP,KAAK1B,MAAMY,SAC3Bc,KAAK1B,MAAMmB,YAAYO,KAAK1B,MAAMkC,MAAMC,OAAOhC,IAAI,GAGrDiC,uBACEV,KAAKG,QAAQQ,IAAI,UAGnBC,qBACEZ,KAAK1B,MAAMuC,aAAeb,KAAKG,QAAQI,SAASP,KAAK1B,MAAMY,SAC3D4B,SAASC,MAAQf,KAAK1B,MAAMyC,OAASD,SAASC,MAGhD9B,SACE,OAAO,kBAAC,EAAD,KAAWe,KAAK1B,MAAhB,CAAuBE,aAAcwB,KAAKxB,aAAcI,iBAAkBoB,KAAK1B,MAAMc,cAG9FZ,aAAaG,GAEX,MAAMqC,EAAMF,SAASG,eAAe,OAC9BC,EAAQJ,SAASK,cAAc,sBAEV,sBAAvBxC,EAAEyC,OAAOvC,WAAiE,WAA5BmB,KAAK1B,MAAMe,aAC3DgC,OAAOC,sBAAsB,KAC3B,MAAMC,EAAaL,EAAMM,aACnBC,EAAcT,EAAIQ,aAClBE,EAAeR,EAAMQ,aAE3BV,EAAIW,UAAYT,EAAMS,WAAaF,EAAcC,IAAiBH,EAAaG,KAG1D,QAAhB/C,EAAEyC,OAAO3C,IAA4C,UAA5BuB,KAAK1B,MAAMe,cAC3CgC,OAAOC,sBAAsB,KAC3B,MAAMC,EAAaL,EAAMM,aACnBC,EAAcT,EAAIQ,aAClBE,EAAeR,EAAMQ,aAC3BR,EAAMS,UAAYX,EAAIW,WAAaJ,EAAaG,IAAiBD,EAAcC,S,oBEpDvF,MAAME,EAAaC,EAAQ,KAG3BA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KAKRC,EAAOC,QAAU,SAAUtD,GAUzB,OATemD,EAAWI,aAAalB,SAASG,eAAexC,GAAK,CAClEwD,KAAM,MACNC,aAAa,EACbC,eAAe,EACfC,cAAc,EACdC,MAAO,cACPC,UAAW,CAAC,MAAS","file":"scripts/editor.0944aecac720900299e9.chunk.js","sourcesContent":["import React from \"react\"\nimport md from \"../../lib/md\"\n\n\n// 文章书写板\nconst Write = props => {\n  return <div onScroll={props.handleScroll}>\n    <div id=\"in\" onMouseEnter={(e) => {\n      props.handleMouseEnter('input')\n    }}>\n      <form>\n        <textarea id=\"code\"/>\n      </form>\n    </div>\n    <div className=\"markdown-body\" id=\"out\" dangerouslySetInnerHTML={{__html: md.render(props.content || '')}}\n         onMouseEnter={(e) => {\n           props.handleMouseEnter('output')\n         }}/>\n  </div>\n};\n\n\nexport default Write;\n","import React from \"react\"\nimport {connect} from \"react-redux\"\nimport {changeMarkdown} from \"../../actions/markdownActions\"\nimport {mouseEnter} from \"../../actions/editorActions\"\nimport Write from \"../views/Write\"\nimport getEditor from \"../../lib/editor\"\nimport {getMarkdown} from \"../../api/markdownApi\"\n\n\nclass EditorContainer extends React.Component {\n  componentDidMount() {\n    this.handleScroll = this.handleScroll.bind(this);\n    const editor = this._editor = getEditor('code');\n    editor.on('change', e => {\n      this.props.changeMarkdown(e.getValue());\n    });\n    editor.setValue(this.props.content);\n    this.props.getMarkdown(this.props.match.params.id, true);\n  }\n\n  componentWillUnmount() {\n    this._editor.off('change');\n  }\n\n  componentDidUpdate() {\n    this.props.forceUpdate && this._editor.setValue(this.props.content);\n    document.title = this.props.title || document.title;\n  }\n\n  render() {\n    return <Write {...this.props} handleScroll={this.handleScroll} handleMouseEnter={this.props.mouseEnter}/>\n  }\n\n  handleScroll(e) {\n\n    const out = document.getElementById('out');\n    const input = document.querySelector('.CodeMirror-scroll');\n\n    if (e.target.className === 'CodeMirror-scroll' && this.props.mouseEntered !== 'output') {\n      window.requestAnimationFrame(() => {\n        const leftHeight = input.scrollHeight;\n        const rightHeight = out.scrollHeight;\n        const offsetHeight = input.offsetHeight;\n        // 滚动的比例是相对于scrollTop的位移\n        out.scrollTop = input.scrollTop * (rightHeight - offsetHeight) / (leftHeight - offsetHeight);\n      });\n    }\n    else if (e.target.id === 'out' && this.props.mouseEntered !== 'input') {\n      window.requestAnimationFrame(() => {\n        const leftHeight = input.scrollHeight;\n        const rightHeight = out.scrollHeight;\n        const offsetHeight = input.offsetHeight;\n        input.scrollTop = out.scrollTop * (leftHeight - offsetHeight) / (rightHeight - offsetHeight);\n      });\n    }\n  }\n}\n\n\nconst mapStateToProps = store => {\n  return store.editorState;\n};\n\nconst mapDispatchToProps = {\n  mouseEnter,\n  changeMarkdown,\n  getMarkdown\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorContainer);\n\n\n","import {MOUSE_ENTERED} from \"./actionTypes\"\n\n/**\n * 用来标注鼠标当前是在输入框(input)中还是在预览框中(out)\n *\n * @param mouseEntered 取值: 'input','output'\n */\nexport function mouseEnter(mouseEntered) {\n  return {\n    type: MOUSE_ENTERED,\n    mouseEntered\n  }\n}\n","const CodeMirror = require('codemirror');\n\n// 这些被依赖的模块会自动修改`CodeMirror`对象\nrequire('codemirror/addon/mode/overlay');\nrequire('codemirror/mode/xml/xml');\nrequire('codemirror/mode/markdown/markdown');\nrequire('codemirror/mode/gfm/gfm');\nrequire('codemirror/mode/javascript/javascript');\nrequire('codemirror/mode/css/css');\nrequire('codemirror/mode/htmlmixed/htmlmixed');\nrequire('codemirror/mode/nginx/nginx');\nrequire('codemirror/addon/edit/continuelist');\n\n// 注意这3者的顺序\n\n\nmodule.exports = function (id) {\n  const editor = CodeMirror.fromTextArea(document.getElementById(id), {\n    mode: 'gfm',\n    lineNumbers: true,\n    matchBrackets: true,\n    lineWrapping: true,\n    theme: 'erlang-dark',\n    extraKeys: {\"Enter\": \"newlineAndIndentContinueMarkdownList\"}\n  });\n\n  return editor;\n};\n"],"sourceRoot":""}