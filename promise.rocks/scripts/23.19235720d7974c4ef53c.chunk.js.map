{"version":3,"sources":["webpack:///./app/components/containers/dynamic/Stock.js"],"names":["Comp","React","Component","constructor","props","super","this","renderRow","bind","handleSearch","forEach","m","stocks","localStorage","JSON","parse","state","tabs","activeTab","search","chosen","length","goFetch","json","setState","stringify","e","name","value","target","s","includes","symbol","filter","makeChosen","setActiveTab","tab","textContent","_setTab","selectStock","stock","find","addToCollection","dataset","v","index","key","style","url","match","className","activeClassName","to","render","width","type","placeholder","onChange","map","onClick","outline","height","rowCount","rowHeight","rowRenderer","justifyContent","marginTop","exact","path","routerProps","params"],"mappings":"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","file":"scripts/23.19235720d7974c4ef53c.chunk.js","sourcesContent":["import React from \"react\"\nimport 'regenerator-runtime/runtime';\nimport 'react-virtualized/styles.css';\nimport {List} from 'react-virtualized';\nimport {Redirect, Route, Switch, NavLink} from \"react-router-dom\"\n\nimport {goFetch} from \"../../../api/misc\";\nimport Spinner from '../../widgets/Spinner';\nimport Detail from './stock/Detail';\n\nclass Comp extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.renderRow = this.renderRow.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    ['selectStock', 'addToCollection', 'setActiveTab', 'makeChosen'].forEach(m => this[m] = this[m].bind(this));\n    const stocks = localStorage.stocks ? JSON.parse(localStorage.stocks) : [];\n    this.stocks = stocks;\n    this.state = {\n      stocks,\n      tabs: ['all', 'chosen'],\n      activeTab: 'all',\n      search: '',\n      chosen: localStorage.chosen ? JSON.parse(localStorage.chosen) : [],\n    }\n  }\n\n  async componentDidMount() {\n    if (!this.state.stocks.length) {\n      const stocks = await (await goFetch('/stocks')).json();\n      this.stocks = stocks;\n      this.setState({stocks});\n      localStorage.stocks = JSON.stringify(stocks);\n    }\n  }\n\n  handleSearch(e) {\n    const {name, value} = e.target;\n    const {activeTab, chosen} = this.state;\n\n    const search = s => s.name.includes(value) || s.symbol.includes(value);\n\n    if (activeTab === 'all') {\n      const stocks = !value ? this.stocks : this.stocks.filter(search);\n      this.setState({[name]: value, stocks});\n    } else if (activeTab === 'chosen') {\n      const stocks = !value ? this.makeChosen(chosen) : this.makeChosen(chosen).filter(search);\n      this.setState({[name]: value, stocks});\n    }\n  }\n\n  makeChosen(chosen) {\n    return this.stocks.filter(s => chosen.includes(s.symbol))\n  }\n\n  setActiveTab(e) {\n    const {activeTab} = this.state;\n    const tab = e.target.textContent;\n    if (activeTab === tab) {\n      return;\n    }\n    this._setTab(tab);\n  }\n\n  _setTab(tab) {\n    const {chosen} = this.state;\n    if (tab === 'all') {\n\n      this.setState({\n        search: '',\n        activeTab: tab,\n        stocks: this.stocks\n      });\n      return;\n    }\n\n    if (tab === 'chosen') {\n      this.setState({\n        search: '',\n        activeTab: tab,\n        stocks: this.makeChosen(chosen)\n      });\n      return;\n    }\n  }\n\n  selectStock(symbol) {\n\n    const stock = this.state.stocks.find(s => s.symbol === symbol);\n    this.setState({\n      stock: {...stock, chosen: this.state.chosen.includes(stock.symbol)},\n    });\n  }\n\n  addToCollection(e) {\n    const {symbol} = e.target.dataset;\n    let {chosen, stocks, activeTab} = this.state;\n    const stock = this.stocks.find(s => s.symbol === symbol);\n    if (chosen.includes(symbol)) {\n      // 取消收藏\n\n      chosen = chosen.filter(v => v !== symbol);\n      localStorage.chosen = JSON.stringify(chosen);\n\n      this.setState({\n        chosen,\n        stocks: activeTab === 'all' ? stocks : stocks.filter(s => s.symbol !== symbol)\n      });\n\n      return;\n    }\n    chosen = [symbol, ...chosen];\n    localStorage.chosen = JSON.stringify(chosen);\n    this.setState({\n      chosen,\n      stocks: activeTab === 'all' ? stocks : [stock, ...stocks]\n    });\n  }\n\n  renderRow({index, key, style}) {\n    const {url} = this.props.match;\n    const s = this.state.stocks[index];\n\n    return <NavLink key={key} className=\"panel-block\" activeClassName=\"is-active\"\n                    style={style} to={url + '/' + s.symbol}>\n              <span className=\"panel-icon\">\n                <i className=\"fa fa-book\"/>\n              </span>\n      {(index + 1) + '. '} {s.name}({s.symbol})\n    </NavLink>\n  }\n\n  render() {\n    const {stocks, search, tabs, activeTab, chosen} = this.state;\n\n    return <div className='container unset-max-width'>\n      <div className=\"columns\">\n        <div className=\"column is-3\" style={{width: '294px'}}>\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">\n              Stocks\n            </p>\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left\">\n                <input className=\"input is-small\" type=\"text\" placeholder=\"search\" name='search' value={search}\n                       onChange={this.handleSearch}/>\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fa fa-search\"/>\n                </span>\n              </p>\n            </div>\n            <p className=\"panel-tabs\">\n              {\n                tabs.map(tab => {\n                  return <a className={tab === activeTab ? \"is-active\" : void 0} key={tab}\n                            onClick={this.setActiveTab}>{tab}</a>\n                })\n              }\n            </p>\n            <div className=\"panel-block\">\n              点击股票名称试试?\n            </div>\n\n\n            {\n              (activeTab === 'chosen' || stocks.length) ? (<List style={{outline: 'none'}}\n                                                                 width={270}\n                                                                 height={410}\n                                                                 rowCount={stocks.length}\n                                                                 rowHeight={41}\n                                                                 rowRenderer={this.renderRow}\n              />) : <a className=\"panel-block\" style={{justifyContent: 'space-around'}}> <Spinner name='circle'\n                                                                                                  style={{marginTop: ''}}/></a>\n\n            }\n          </nav>\n        </div>\n        <div className=\"column is-9\">\n          <Route exact path='/d/Stock/:symbol' render={routerProps => {\n            const {symbol} = routerProps.match.params;\n            const stock = this.stocks.find(s => s.symbol === symbol);\n            return <Detail {...routerProps} {...this.state}\n                           selectStock={this.selectStock}\n                           addToCollection={this.addToCollection}\n                           stock={stock}\n                           chosen={chosen.includes(stock.symbol)}\n            />\n          }}/>\n        </div>\n      </div>\n    </div>\n  }\n}\n\nexport default Comp\n"],"sourceRoot":""}