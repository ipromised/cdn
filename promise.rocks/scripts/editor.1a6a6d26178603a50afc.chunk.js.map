{"version":3,"sources":["webpack:///./app/components/views/Write.js","webpack:///./app/components/containers/EditorContainer.js","webpack:///./app/actions/editorActions.js","webpack:///./app/lib/editor.js"],"names":["views_Write","props","react_default","a","createElement","onScroll","handleScroll","id","onMouseEnter","e","handleMouseEnter","className","dangerouslySetInnerHTML","__html","md","render","content","mapDispatchToProps","mouseEnter","mouseEntered","type","actionTypes","changeMarkdown","markdownActions","getMarkdown","markdownApi","__webpack_exports__","Object","es","store","editorState","Component","componentDidMount","this","bind","editor","_editor","editor_default","on","getValue","setValue","match","params","componentWillUnmount","off","componentDidUpdate","forceUpdate","document","title","_extends","out","getElementById","input","querySelector","target","window","requestAnimationFrame","leftHeight","scrollHeight","rightHeight","offsetHeight","scrollTop","CodeMirror","__webpack_require__","module","exports","fromTextArea","mode","lineNumbers","matchBrackets","lineWrapping","theme","extraKeys","Enter"],"mappings":"wJAsBA,IAAAA,EAjBcC,GACLC,EAAAC,EAAAC,cAAA,OAAKC,SAAUJ,EAAMK,cAC1BJ,EAAAC,EAAAC,cAAA,OAAKG,GAAG,KAAKC,aAAeC,IAC1BR,EAAMS,iBAAiB,WAEvBR,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,YAAUG,GAAG,WAGjBL,EAAAC,EAAAC,cAAA,OAAKO,UAAU,gBAAgBJ,GAAG,MAAMK,yBAA0BC,OAAQC,EAAA,EAAGC,OAAOd,EAAMe,SAAW,KAChGR,aAAeC,IACbR,EAAMS,iBAAiB,uPC2ClC,MAIMO,GACJC,WCzDK,SAAoBC,GACzB,OACEC,KAAMC,EAAA,EACNF,iBDuDFG,eAAAC,EAAA,EACAC,YAAAC,EAAA,GAGFC,EAAA,QAAeC,OAAAC,EAAA,QAAAD,CAVSE,GACfA,EAAMC,YASyBb,EAAxC,eA5D8Bf,EAAAC,EAAM4B,UAClCC,oBACEC,KAAK3B,aAAe2B,KAAK3B,aAAa4B,KAAKD,MAC3C,MAAME,EAASF,KAAKG,QAAUC,IAAU,QACxCF,EAAOG,GAAG,SAAU7B,IAClBwB,KAAKhC,MAAMqB,eAAeb,EAAE8B,cAE9BJ,EAAOK,SAASP,KAAKhC,MAAMe,SAC3BiB,KAAKhC,MAAMuB,YAAYS,KAAKhC,MAAMwC,MAAMC,OAAOnC,IAAI,GAGrDoC,uBACEV,KAAKG,QAAQQ,IAAI,UAGnBC,qBACEZ,KAAKhC,MAAM6C,aAAeb,KAAKG,QAAQI,SAASP,KAAKhC,MAAMe,SAC3D+B,SAASC,MAAQf,KAAKhC,MAAM+C,OAASD,SAASC,MAGhDjC,SACE,OAAOb,EAAAC,EAAAC,cAACJ,EAADiD,KAAWhB,KAAKhC,OAAOK,aAAc2B,KAAK3B,aAAcI,iBAAkBuB,KAAKhC,MAAMiB,cAG9FZ,aAAaG,GAEX,MAAMyC,EAAMH,SAASI,eAAe,OAC9BC,EAAQL,SAASM,cAAc,sBAEV,sBAAvB5C,EAAE6C,OAAO3C,WAAiE,WAA5BsB,KAAKhC,MAAMkB,aAC3DoC,OAAOC,sBAAsB,KAC3B,MAAMC,EAAaL,EAAMM,aACnBC,EAAcT,EAAIQ,aAClBE,EAAeR,EAAMQ,aAE3BV,EAAIW,UAAYT,EAAMS,WAAaF,EAAcC,IAAiBH,EAAaG,KAG1D,QAAhBnD,EAAE6C,OAAO/C,IAA4C,UAA5B0B,KAAKhC,MAAMkB,cAC3CoC,OAAOC,sBAAsB,KAC3B,MAAMC,EAAaL,EAAMM,aACnBC,EAAcT,EAAIQ,aAClBE,EAAeR,EAAMQ,aAC3BR,EAAMS,UAAYX,EAAIW,WAAaJ,EAAaG,IAAiBD,EAAcC,6BEpDvF,MAAME,EAAaC,EAAQ,KAG3BA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KAKRC,EAAOC,QAAU,SAAU1D,GAUzB,OATeuD,EAAWI,aAAanB,SAASI,eAAe5C,IAC7D4D,KAAM,MACNC,aAAa,EACbC,eAAe,EACfC,cAAc,EACdC,MAAO,cACPC,WAAYC,MAAS","file":"scripts/editor.1a6a6d26178603a50afc.chunk.js","sourcesContent":["import React from \"react\"\nimport md from \"../../lib/md\"\n\n\n// 文章书写板\nconst Write = props => {\n  return <div onScroll={props.handleScroll}>\n    <div id=\"in\" onMouseEnter={(e) => {\n      props.handleMouseEnter('input')\n    }}>\n      <form>\n        <textarea id=\"code\"/>\n      </form>\n    </div>\n    <div className=\"markdown-body\" id=\"out\" dangerouslySetInnerHTML={{__html: md.render(props.content || '')}}\n         onMouseEnter={(e) => {\n           props.handleMouseEnter('output')\n         }}/>\n  </div>\n};\n\n\nexport default Write;\n","import React from \"react\"\nimport {connect} from \"react-redux\"\nimport {changeMarkdown} from \"../../actions/markdownActions\"\nimport {mouseEnter} from \"../../actions/editorActions\"\nimport Write from \"../views/Write\"\nimport getEditor from \"../../lib/editor\"\nimport {getMarkdown} from \"../../api/markdownApi\"\n\n\nclass EditorContainer extends React.Component {\n  componentDidMount() {\n    this.handleScroll = this.handleScroll.bind(this);\n    const editor = this._editor = getEditor('code');\n    editor.on('change', e => {\n      this.props.changeMarkdown(e.getValue());\n    });\n    editor.setValue(this.props.content);\n    this.props.getMarkdown(this.props.match.params.id, true);\n  }\n\n  componentWillUnmount() {\n    this._editor.off('change');\n  }\n\n  componentDidUpdate() {\n    this.props.forceUpdate && this._editor.setValue(this.props.content);\n    document.title = this.props.title || document.title;\n  }\n\n  render() {\n    return <Write {...this.props} handleScroll={this.handleScroll} handleMouseEnter={this.props.mouseEnter}/>\n  }\n\n  handleScroll(e) {\n\n    const out = document.getElementById('out');\n    const input = document.querySelector('.CodeMirror-scroll');\n\n    if (e.target.className === 'CodeMirror-scroll' && this.props.mouseEntered !== 'output') {\n      window.requestAnimationFrame(() => {\n        const leftHeight = input.scrollHeight;\n        const rightHeight = out.scrollHeight;\n        const offsetHeight = input.offsetHeight;\n        // 滚动的比例是相对于scrollTop的位移\n        out.scrollTop = input.scrollTop * (rightHeight - offsetHeight) / (leftHeight - offsetHeight);\n      });\n    }\n    else if (e.target.id === 'out' && this.props.mouseEntered !== 'input') {\n      window.requestAnimationFrame(() => {\n        const leftHeight = input.scrollHeight;\n        const rightHeight = out.scrollHeight;\n        const offsetHeight = input.offsetHeight;\n        input.scrollTop = out.scrollTop * (leftHeight - offsetHeight) / (rightHeight - offsetHeight);\n      });\n    }\n  }\n}\n\n\nconst mapStateToProps = store => {\n  return store.editorState;\n};\n\nconst mapDispatchToProps = {\n  mouseEnter,\n  changeMarkdown,\n  getMarkdown\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorContainer);\n\n\n","import {MOUSE_ENTERED} from \"./actionTypes\"\n\n/**\n * 用来标注鼠标当前是在输入框(input)中还是在预览框中(out)\n *\n * @param mouseEntered 取值: 'input','output'\n */\nexport function mouseEnter(mouseEntered) {\n  return {\n    type: MOUSE_ENTERED,\n    mouseEntered\n  }\n}\n","const CodeMirror = require('codemirror');\n\n// 这些被依赖的模块会自动修改`CodeMirror`对象\nrequire('codemirror/addon/mode/overlay');\nrequire('codemirror/mode/xml/xml');\nrequire('codemirror/mode/markdown/markdown');\nrequire('codemirror/mode/gfm/gfm');\nrequire('codemirror/mode/javascript/javascript');\nrequire('codemirror/mode/css/css');\nrequire('codemirror/mode/htmlmixed/htmlmixed');\nrequire('codemirror/mode/nginx/nginx');\nrequire('codemirror/addon/edit/continuelist');\n\n// 注意这3者的顺序\n\n\nmodule.exports = function (id) {\n  const editor = CodeMirror.fromTextArea(document.getElementById(id), {\n    mode: 'gfm',\n    lineNumbers: true,\n    matchBrackets: true,\n    lineWrapping: true,\n    theme: 'erlang-dark',\n    extraKeys: {\"Enter\": \"newlineAndIndentContinueMarkdownList\"}\n  });\n\n  return editor;\n};\n"],"sourceRoot":""}