{"version":3,"sources":["webpack:///./app/components/containers/dynamic/Naked.js","webpack:///./app/lib/NakedTable/utils.js","webpack:///./app/lib/NakedTable/Tabs.js","webpack:///./app/lib/NakedTable/THead.js","webpack:///./app/lib/NakedTable/TBody.js","webpack:///./app/lib/NakedTable/TFoot.js","webpack:///./app/lib/NakedTable/PaginationMixin.js","webpack:///./app/lib/NakedTable/Pagination.js","webpack:///./app/lib/NakedTable/NakedTable.js"],"names":["table","fields","name","label","tooltip","format","value","field","row","Math","floor","random","toString","join","age","sortable","height","tabs","pageList","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0___default","a","Component","render","createElement","_lib_NakedTable_NakedTable__WEBPACK_IMPORTED_MODULE_1__","data","total","rows","i","push","toFixed","randomData","containerClass","buildRows","fieldNames","fieldsConfig","map","key","ii","fmt","dangerouslySetInnerHTML","__html","NakedTable_Tabs","react_default","shouldComponentUpdate","nextProps","this","props","selectedTab","className","tabClass","tabNames","tab","index","onClick","setTab","bind","href","NakedTable_THead","order","length","componentDidMount","initTooltip","window","$","fn","tipsy","getDOMNode","gravity","live","title","getAttribute","html","sortingField","sortingOrder","labelledFields","globallySortable","config","clz","Error","style","data-tip","sort","NakedTable_TBody","loadingTip","Object","utils","colSpan","__webpack_require__","NakedTable_TFoot","NakedTable_PaginationMixin","jump","action","e","currentTarget","target","setPageSize","buildPageList","onChange","v","page","pageTotal","NakedTable_Pagination","constructor","super","assign","getPageInfo","textAlign","NakedTable_NakedTable","forEach","m","state","_getInitialState","t","handleFormSubmit","ceil","showTabs","loadData","[object Object]","keys","ajax","Tabs","tableClass","THead","TBody","getRows","TFoot","footer","showPagination","Pagination","form","addEventListener","preventDefault","fetchByPage","doSort","setState","sortOnLoad","b","a1","b1","reverse","inputVal","size","getParams","params","s","reduce","p","_objectSpread","pageSize","slice"],"mappings":"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","file":"scripts/15.a1fb833f81e08b5ca2e6.chunk.js","sourcesContent":["import React from \"react\";\nimport NakedTable from \"../../../lib/NakedTable/NakedTable\";\n\n\nconst table = {\n  fields: {\n    name: {\n      label: \"名称\",\n      tooltip: \"名称名称<span style='color:crimson'>名称名称</span>\",\n      format(value, field, row) {\n        return ['<span style=\"color:#', Math.floor(Math.random() * 16777215).toString(16), '\">', value, '</span>'].join(\"\");\n      }\n    },\n    age: {\n      label: \"年龄\",\n      sortable: true//this column is sortable\n    },\n    height: {\n      label: \"体重\",\n      sortable: true\n    }\n  },\n  tabs: [\n    {label: \"tab1\", fields: [\"name\", \"age\", \"height\"]},\n    {label: \"tab2\", fields: [\"name\", \"height\"]}\n  ],\n  pageList: [5, 7]\n};\n\nfunction randomData(total) {//generate random data\n  total = total || ~~(Math.random() * 100);\n  const rows = [];\n  for (let i = total; i > 0; i--) {\n    rows.push({\n      name: \"id_\" + Math.random(),\n      age: ~~(Math.random() * 100),\n      height: (Math.random() * 100).toFixed(2)\n    });\n  }\n  return {total: total, rows: rows};\n}\n\n\nclass Comp extends React.Component {\n\n  render() {\n    return <NakedTable data={randomData(15)} table={table} containerClass='naked container'/>\n  }\n}\n\nexport default Comp;\n","'use strict';\nimport React from \"react\";\n\n\n/**\n * html structure:\n * <tr>\n *     <td>text one</td>\n *     <td>text one</td>\n *     <td>text one</td>\n *     ...\n * </tr>\n * ...\n */\nexport default function buildRows(rows, fieldNames, fieldsConfig) {\n  return rows.map((row, i) => {\n    return <tr key={i}>{\n      fieldNames.map((field, ii) => {\n        var value = row['_' + field];//cache\n        if (value == null) {\n          value = row[field];\n          var fmt = fieldsConfig[field].format;\n          if (fmt) {\n            value = fmt(value, field, row);\n          }\n          row['_' + field] = value || '';\n        }\n        return <td key={ii} dangerouslySetInnerHTML={{__html: value}}/>\n      })}\n    </tr>;\n  })\n};\n","'use strict';\nimport React from \"react\";\n\n/**\n * Default Tabs component\n */\nclass Tabs extends React.Component {\n\n  /**\n   * only update when selectedTab changes\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selectedTab !== nextProps.selectedTab;\n  }\n\n  /**\n   * html structure:\n   * <ul>\n   *     <li class=\"active\"><a href=\"javascript:void(0)\">tab one</a></li>\n   *     <li><a href=\"javascript:void(0)\">tab two</a></li>\n   *     ...\n   * </ul>\n   */\n  render() {\n\n    return <ul className={this.props.tabClass}>{\n      this.props.tabNames.map(function (tab, index) {\n        var props = {key: index};\n        if (this.props.selectedTab === index) {\n          props.className = 'active';\n        } else {\n          props.onClick = this.props.setTab.bind(this, index);\n        }\n        return <li {...props}>\n          <a href='javascript:void(0);'>{tab}</a>\n        </li>\n      }, this)\n    }\n    </ul>\n  }\n};\n\nexport default Tabs;\n","'use strict';\nimport React from \"react\";\n\n/**\n * THead component\n */\nclass THead extends React.Component {\n\n  /**\n   * Only update when selectedTab or order changes\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selectedTab !== nextProps.selectedTab\n      || this.props.order !== nextProps.order\n      || this.props.fields.length !== nextProps.fields.length\n  }\n\n  componentDidMount() {\n    this.initTooltip();\n  }\n\n  /**\n   * add tooltip\n   */\n  initTooltip() {\n    if (window.$ && $.fn.tipsy) {\n      $(this.getDOMNode()).tipsy({\n        gravity: 's',\n        live: '.naked-tooltip',\n        title: function () {\n          return this.getAttribute('data-tip');\n        },\n        html: true\n      });\n    }\n  }\n\n  /**\n   * html structure:\n   * <thead>\n   *     <tr>\n   *         <th>label one</th>\n   *         <th>label two</th>\n   *         <th>label three</th>\n   *         ...\n   *     </tr>\n   * </thead>\n   */\n  render() {\n    const sortingField = this.props.field,\n      sortingOrder = this.props.order,\n      fields = this.props.fields,\n      fieldsConfig = this.props.table.fields || this.props.labelledFields,\n      globallySortable = this.props.table.sortable;\n    return <thead>\n    <tr>{\n      fields.map(function (field, index) {\n        const config = fieldsConfig[field],\n          clz = sortingField === field ? sortingOrder : '';\n        if (!config) {\n          throw Error('field:' + field + ' not in fields list -> ', fields);\n        }\n        const props = {\n          key: index,\n          style: config.style,\n          className: 'naked-tooltip ' + clz,\n          'data-tip': config.tooltip || config.label\n        };\n        if (config.sortable || (globallySortable && config.sortable !== false)) {\n          props.className += ' sortable';\n          props.onClick = this.props.sort.bind(this, field);\n        }\n        return <th {...props}>{fieldsConfig[field].label}</th>\n      }, this)\n    }\n    </tr>\n    </thead>;\n  }\n}\n\nexport default THead;\n","'use strict';\nimport React from \"react\";\n\nimport buildRows from \"./utils\";\n\n/**\n * Default tbody component\n *\n * html structure:\n * <tbody>\n *     <tr>\n *         <td>text one</td>\n *         <td>text one</td>\n *         <td>text one</td>\n *         ...\n *     </tr>\n *     ...\n * </tbody>\n */\nclass TBody extends React.Component {\n  render() {\n\n    const {fields, fieldsConfig, labelledFields, rows, loadingTip} = this.props;\n\n    if (rows && rows.length) {\n      return <tbody>{buildRows(rows, fields, fieldsConfig || labelledFields)}</tbody>;\n    }\n    return <tbody>\n    <tr>\n      <td colSpan={fields.length}>{loadingTip}</td>\n    </tr>\n    </tbody>;\n\n  }\n}\n\nexport default TBody;\n","'use strict';\nimport React from \"react\";\n\nvar buildRows = require(\"./utils\").buildRows;\n\n/**\n * Default tfoot component\n */\nclass TFoot extends React.Component {\n\n  /**\n   * only update when selectedTab changes\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selectedTab !== nextProps.selectedTab;\n  }\n\n  /**\n   * html structure:\n   * <tfoot>\n   *     <tr>\n   *         <td>text one</td>\n   *         <td>text one</td>\n   *         <td>text one</td>\n   *         ...\n   *     </tr>\n   *     ...\n   * </tfoot>\n   */\n  render() {\n\n    const {rows} = this.props;\n    if (rows && rows.length) {\n      return <tfoot>{buildRows(rows, this.props.fields, this.props.table.fields || this.props.labelledFields)}</tfoot>;\n    }\n    return null;\n  }\n}\n\nexport default TFoot;\n","'use strict';\nimport React from \"react\";\n\n/**\n * Pagination utilities\n */\nconst PaginationMixin = {\n\n  /**\n   * jump to g given page\n   * @param action Possible values:start/prev/next/end/jump\n   * @param e Event triggered by an input change\n   */\n  jump: function (action, e) {\n    if (e.currentTarget.className !== 'disabled') {\n      this.props.jump(action, e.target.value);\n    }\n  },\n\n  /**\n   * set row count per page\n   * @param e\n   */\n  setPageSize: function (e) {\n    this.props.setPageSize(e.target.value);\n  },\n\n  /**\n   * page size options\n   *\n   * html structure:\n   * <select>\n   *     <option>5</option>\n   *     <option>10</option>\n   *     <option>15</option>\n   * </select>\n   *\n   * @returns {XML}\n   */\n  buildPageList: function () {\n    return <select onChange={this.setPageSize}>{\n      this.props.pageList.map(function (v, i) {\n        return <option>{v}</option>\n      })}\n    </select>\n  },\n\n  /**\n   * only update when pageNo changes\n   */\n  shouldComponentUpdate: function (nextProps) {\n    return this.props.page !== nextProps.page || this.props.pageTotal !== nextProps.pageTotal;\n  }\n};\n\nexport default PaginationMixin;\n","'use strict';\nimport React from \"react\";\n\nimport PaginationMixin from './PaginationMixin';\n\n/**\n * Default pagination component\n */\nclass Pagination extends React.Component {\n\n  constructor(props) {\n    super(props);\n    Object.assign(this, PaginationMixin);\n  }\n\n  getPageInfo() {\n    return this.props.page + '/' + this.props.pageTotal;\n  }\n\n  /**\n   * html structure:\n   * <ul>\n   *     <li>上一页</li>\n   *     <li>1/5</li>\n   *     <li>下一页</li>\n   * </li>\n   *\n   * @returns {XML}\n   */\n  render() {\n\n    return <div style={{textAlign: 'right'}}>\n      <ul className='nt-pagination'>\n        <li onClick={this.jump.bind(this, 'prev')} className={this.props.page === 1 ? 'disabled' : null}>\n          <a href='javascript:void 0'>上一页</a>\n        </li>\n        <li>\n          {this.getPageInfo()}\n        </li>\n        <li onClick={this.jump.bind(this, 'next')}\n            className={this.props.page === this.props.pageTotal ? 'disabled' : null}>\n          <a href='javascript:void 0'>下一页 </a>\n        </li>\n      </ul>\n    </div>\n  }\n};\n\nexport default Pagination;\n","'use strict';\nimport React from \"react\";\n\nimport Tabs from './Tabs';\nimport THead from './THead';\nimport TBody from './TBody';\nimport TFoot from './TFoot';\nimport Pagination from './Pagination';\nimport './naked.css'\n\nclass NakedTable extends React.Component {\n  constructor(props) {\n    super(props);\n    ['setTab', 'sort', 'jump', 'setPageSize'].forEach(m => this[m] = this[m].bind(this));\n    this.state = this._getInitialState();\n  }\n\n  static defaultProps = {\n\n    Tabs, //Tabs component\n    THead, // THead component\n    TBody, // TBody component\n    TFoot, //TFoot component\n    Pagination, //Pagination component\n\n    containerClass: 'naked', // ClassName of this component\n    tabClass: 'nt-nav', // ClassName of Tabs component\n    tableClass: 'nt-table', // ClassName of table element\n    loadingTip: 'Loading ...', // Loading tip\n\n    tabNames: null,// Allow alternative tab names\n    selectedTab: 0, // Index of the active tab\n    form: null, // Used to provide extra params, optional\n    fetchByPage: false, // Whether fetch data by page\n    showPagination: true, // if false , Pagination component will be hidden\n    data: {total: 0, rows: []}, // Default data\n    order: null, // Sort in which order. Possible values: asc/desc\n    field: null, // Sort by which field\n    loadData: null,// used to load data\n  }\n\n  _getInitialState() {\n    const {table, data} = this.props;\n    const tabNames = this.props.tabNames || table.tabs.map(t => t.label);\n    const pageList = table.pageList || [10];//10 rows per page by default\n\n    this.handleFormSubmit();\n\n    return {\n      data: data, // Table data\n      selectedTab: this.props.selectedTab, // Default tab\n      page: 1, // Default pageNo\n      rows: table.pageList[0], // Row count per page\n      pageTotal: Math.ceil(data.total / table.pageList[0]), // Page count\n      order: this.props.order,\n      field: this.props.field,\n      tabClass: table.tabClass || this.props.tabClass,\n      showTabs: tabNames && tabNames.length > 1,\n      loadData: table.loadData || this.props.loadData,\n      tabNames,\n      pageList,\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const {table, data} = props;\n    let labelledFields = table.fields;\n    let {fields} = table.tabs[props.selectedTab] || {}; // fields to display\n    if (!fields && data.rows.length) {\n      fields = Object.keys(data.rows[0]);\n      labelledFields = fields.map(v => ({[v]: {label: v}}));\n    }\n    return Object.assign({}, state, {\n      data,\n      fields: fields || [],\n      labelledFields: labelledFields || [],\n      pageTotal: Math.ceil(data.total / state.pageList[0]), // Page count\n    })\n  }\n\n  componentDidMount() {\n    this.ajax();\n  }\n\n  render() {\n    const {showTabs, tabClass, tabNames, fields, labelledFields, pageList, pageTotal} = this.state;\n    const {table} = this.props;\n\n    return <div className={this.props.containerClass}>\n      {showTabs && (<this.props.Tabs tabClass={tabClass} tabNames={tabNames}\n                                     selectedTab={this.state.selectedTab} setTab={this.setTab} table={table}/>)}\n      <table className={this.props.tableClass}>\n\n        <this.props.THead fields={fields} table={this.props.table} labelledFields={labelledFields}\n                          field={this.state.field}\n                          order={this.state.order} sort={this.sort} selectedTab={this.state.selectedTab}/>\n\n        <this.props.TBody fields={fields} fieldsConfig={this.props.table.fields} labelledFields={labelledFields}\n                          rows={this.getRows()}/>\n\n        <this.props.TFoot fields={fields} fieldsConfig={this.props.table.fields} labelledFields={labelledFields}\n                          rows={this.state.data.footer} selectedTab={this.state.selectedTab}/>\n\n      </table>\n      {this.props.showPagination && (\n        <this.props.Pagination pageList={pageList} total={this.state.data.total} page={this.state.page}\n                               pageTotal={pageTotal} jump={this.jump} setPageSize={this.setPageSize}/>)}\n    </div>\n  }\n\n\n  /**\n   * Reload table data on form submit\n   */\n  handleFormSubmit() {\n    if (!this.props.form) {\n      return;\n    }\n    this.props.form.addEventListener('submit', (e) => {\n      e.preventDefault();\n      this.ajax(1);// 1 : page reset\n    });\n  }\n\n  /**\n   * Sort table rows on th click\n   * @param field The field to sort by\n   * @param e event triggered by clicking th.sortable\n   */\n  sort(field, e) {\n    var rows = this.state.data.rows;\n    if (!rows) {\n      return;\n    }\n    this.state.field = field;\n    this.state.order = this.state.order === 'desc' ? 'asc' : 'desc';//reversed order\n\n    // Server side sort\n    if (this.props.fetchByPage) {\n      this.ajax();\n      return;\n    }\n\n    this.doSort(rows, field, this.state.order);\n\n    this.setState({\n      data: {rows: rows, total: rows.length, footer: this.state.data.footer}\n    });\n  }\n\n  /**\n   * Sort table rows on data load\n   * @param rows\n   */\n  sortOnLoad(rows) {\n    if (rows && rows.length) {\n      const {order, field} = this.state;\n      if (!order || !field) {\n        return;\n      }\n      this.doSort(rows, field, order);\n    }\n  }\n\n  /**\n   * Sort rows by field in a given order\n   * @param rows data to be sorted\n   * @param field\n   * @param order\n   */\n  doSort(rows, field, order) {\n    //todo for a derived field, value may be unavailable\n    rows.sort((a, b) => {//从小到大排列\n      const a1 = a[field],\n        b1 = b[field];\n      return a1 === b1 ? 0 : (a1 > b1 ? 1 : -1);\n    });\n    if (order === 'desc') {\n      rows.reverse();\n    }\n  }\n\n  /**\n   * Based on action , jump to a given page\n   * @param action\n   * @param inputVal\n   */\n  jump(action, inputVal) {\n    let {page, pageTotal: total} = this.state;\n\n    switch (action) {\n      case 'end':\n        page = total;\n        break;\n      case 'prev':\n        page--;\n        break;\n      case 'next':\n        page++;\n        break;\n      case 'jump':\n        page = +inputVal || 1;\n        break;\n      default:\n        page = 1;\n    }\n    if (page > total) {\n      page = total;\n    } else if (page < 1) {\n      page = 1;\n    }\n    page !== this.state.page && this.ajax(page);\n  }\n\n  /**\n   * Set row count per page\n   */\n  setPageSize(size) {\n    // Reload data from server\n    if (this.props.fetchByPage) {\n      this.ajax(1, size);\n      return;\n    }\n    this.setState({\n      rows: size,\n      page: 1,\n      pageTotal: Math.ceil(this.state.data.total / size || 1)\n    });\n\n  }\n\n  /**\n   * Select a tab\n   */\n  setTab(selectedTab) {\n    const fields = this.props.table.tabs[selectedTab].fields;\n    this.setState({selectedTab: selectedTab, fields});\n  }\n\n  /**\n   * Request parmas\n   * @param page pageNo\n   * @param rows pageSize\n   */\n  getParams(page, rows) {\n    return {//传向服务端的参数\n      page: page || this.state.page,\n      rows: rows || this.state.rows,\n      field: this.state.field,\n      order: this.state.order\n    };\n  }\n\n  /**\n   * Load data locally or remotely, depending on this.props.fetchByPage\n   * @param page pageNo\n   * @param rows pageSize\n   */\n  ajax(page, rows) {\n    if (!this.props.fetchByPage && page) {//数据全量获取\n      this.setState({page: page});\n      return;\n    }\n    const params = this.getParams(page, rows);\n    this.state.loadData && this.state.loadData(params, (data) => {\n      const s = {};\n      if (data.total < 1) {\n        s.loadingTip = '没有数据可展示';\n      }\n      s.data = data;\n\n      this.sortOnLoad(data.rows);\n\n      if (!this.state.fields.length) {// 没有配置fields. 根据返回的数据动态获取\n        if (data.rows.length) {\n          s.fields = Object.keys(data.rows[0]);\n          s.labelledFields = s.fields.reduce((p, v) => {\n            p[v] = {label: v};\n            return p;\n          }, {});\n        }\n      }\n\n\n      this.setState({\n        page: this.props.fetchByPage ? params.page : 1,\n        pageTotal: Math.ceil(data.total / this.state.rows || 1),\n        ...s,\n      });\n    });\n  }\n\n  /**\n   * Rows for current page\n   */\n  getRows() {\n    const page = this.state.page,\n      pageSize = this.state.rows,\n      rows = this.state.data.rows;\n    if (this.props.fetchByPage) {\n      return rows;\n    }\n    return rows.slice((page - 1) * pageSize, page * pageSize);\n  }\n}\n\nexport default NakedTable;\n"],"sourceRoot":""}