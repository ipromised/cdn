{"version":3,"sources":["webpack:///./app/components/containers/dynamic/es/tables.js","webpack:///./app/api/es.js","webpack:///./app/components/containers/dynamic/es.js","webpack:///./app/lib/NakedTable/utils.js","webpack:///./app/lib/NakedTable/Tabs.js","webpack:///./app/lib/NakedTable/THead.js","webpack:///./app/lib/NakedTable/TBody.js","webpack:///./app/lib/NakedTable/TFoot.js","webpack:///./app/lib/NakedTable/PaginationMixin.js","webpack:///./app/lib/NakedTable/Pagination.js","webpack:///./app/lib/NakedTable/NakedTable.js"],"names":["auto","tabs","pageList","mysql","fields","table_schema","label","table_name","sortable","column_name","column_type","history","host","created","path","__webpack_exports__","url","headers","token","localStorage","es_token","match_all","query","es_Indices","react_default","a","Component","constructor","props","super","this","getMapping","bind","state","indices","[object Object]","res","async","fetch","method","json","es_indices","setState","e","target","tagName","preventDefault","href","getAttribute","push","render","createElement","onClick","NakedTable","data","rows","total","length","table","containerClass","index","format","value","field","row","docs.count","store.size","status","health","es_Types","types","load","componentDidUpdate","prev","cur","match","params","mappings","Object","keys","map","v","key","es","to","es_TypeRecords","loadData","page","size","order","cb","type","body","JSON","stringify","search","from","hits","_source","tables","fetchByPage","className","component","buildRows","fieldNames","fieldsConfig","i","react__WEBPACK_IMPORTED_MODULE_0___default","ii","fmt","dangerouslySetInnerHTML","__html","NakedTable_Tabs","shouldComponentUpdate","nextProps","selectedTab","tabClass","tabNames","tab","setTab","NakedTable_THead","componentDidMount","initTooltip","window","$","fn","tipsy","getDOMNode","gravity","live","title","html","sortingField","sortingOrder","labelledFields","globallySortable","config","clz","Error","style","data-tip","tooltip","sort","NakedTable_TBody","loadingTip","utils","colSpan","__webpack_require__","NakedTable_TFoot","NakedTable_PaginationMixin","jump","action","currentTarget","setPageSize","buildPageList","onChange","pageTotal","NakedTable_Pagination","assign","getPageInfo","textAlign","NakedTable_NakedTable","forEach","m","_getInitialState","t","handleFormSubmit","Math","ceil","showTabs","ajax","Tabs","tableClass","THead","TBody","getRows","TFoot","footer","showPagination","Pagination","form","addEventListener","doSort","sortOnLoad","b","a1","b1","reverse","inputVal","getParams","s","reduce","p","_objectSpread","pageSize","slice"],"mappings":"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","file":"scripts/24.e35032c0be35945deef2.chunk.js","sourcesContent":["export const auto = {// 自动生成fields\n  tabs: [],\n  pageList: [5, 7]\n};\n\nexport const mysql = {\n  fields: {\n    table_schema: {\n      label: \"schema\",\n    },\n    table_name: {\n      label: \"table\",\n      sortable: true//this column is sortable\n    },\n    column_name: {\n      label: \"column\",\n      sortable: true\n    },\n    column_type: {\n      label: 'type'\n    }\n  },\n  tabs: [\n    {label: \"tab1\", fields: ['table_schema', 'table_name', 'column_name', 'column_type']},\n  ],\n  pageList: [5, 7]\n};\n\nexport const history = {\n  fields: {\n    host: {\n      label: \"host\",\n    },\n    created: {\n      label: \"created\",\n      sortable: true,\n    },\n    path: {\n      label: \"pathname\"\n    }\n  },\n  tabs: [\n    {label: \"tab1\", fields: ['host', 'path', 'created']},\n  ],\n  pageList: [5, 7]\n};\n\n\nexport default {\n  mysql,\n  history,\n  auto\n}\n","/**\n api for elasticsearch\n */\n\n\n// es base path\nconst url = '/logically/es';\n\nconst headers = (token) => {\n  return {\n    token: token || localStorage.es_token\n  }\n};\n\nconst match_all = {\n  query: {\n    match_all: {}\n  }\n};\n\nasync function db(data) {\n  /**\n   * 索引数据库数据\n   * select table_schema,table_name,column_name,is_nullable,column_type,column_comment,\n   * character_set_name,collation_name from information_schema.`columns`\n   * where table_schema='yej_server_db_160606';\n   */\n  const res = await fetch(url + '/db/mysql', {method: 'POST', headers, body: JSON.stringify(data)});\n  const json = await res.json();\n  console.log(res, json);\n}\n\nasync function db_search(data) {\n  const res = await fetch(url + '/db/mysql/_search?q=' + encodeURIComponent(data), {headers});\n  const json = await res.json();\n  console.log(json.hits.hits.map(v => v._source));\n}\n\nasync function truncate(indxOrType = '/not/exists') {\n  /**\n   * 清空index或type\n   */\n  const res = await fetch(url + indxOrType + '/_delete_by_query', {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(match_all)\n  });\n  const json = await res.json();\n  console.log(res, json);\n}\n\nexport async function search(index, body = match_all) {\n  const res = await fetch(url + index + '/_search', {\n    method: 'POST',\n    headers: headers(),\n    body: JSON.stringify(body)\n  });\n  return await res.json();\n}\n\nexport async function indices() {\n  const res = await fetch(url + '/_cat/indices?format=json', {\n    method: 'GET',\n    headers: headers()\n  });\n  return await res.json();\n}\n\nexport async function mappings(index = '') {\n  const res = await fetch(url + index + '/_mapping', {\n    method: 'GET',\n    headers: headers()\n  });\n  return await res.json();\n}\n","import React from \"react\";\nimport {search, indices, mappings} from '../../../api/es';\nimport tables from './es/tables';\nimport NakedTable from \"../../../lib/NakedTable/NakedTable\";\nimport {Route, Link} from \"react-router-dom\"\n\nclass Comp extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {match} = this.props;\n    return <div className=\"container\">\n      <Indices match={this.props.match} history={this.props.history}/>\n      <Route path={match.url + '/:index'} render={props => <Types {...props}/>}/>\n      <Route path={match.url + '/:index/:type'} component={TypeRecords}/>\n    </div>\n  }\n}\n\n/**\n * 索引列表\n */\nclass Indices extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getMapping = this.getMapping.bind(this);\n    this.state = {\n      indices: []\n    }\n  }\n\n  static table = {\n    fields: {\n      index: {\n        label: \"index\",\n        format(value, field, row) {\n          return `<a href='${value}'>${value}</a>`\n        }\n      },\n      'docs.count': {\n        label: \"doc_count\",\n        sortable: true//this column is sortable\n      },\n      'store.size': {\n        label: \"size\",\n        sortable: true\n      },\n      status: {\n        label: 'status'\n      },\n      health: {\n        label: 'health'\n      },\n    },\n    tabs: [\n      {label: \"tab1\", fields: ['index', 'docs.count', 'store.size', 'status', 'health']},\n    ],\n    pageList: [10, 10],\n  }\n\n  async componentDidMount() {\n    const res = await indices();\n    this.setState({\n      indices: res,\n    })\n  }\n\n  getMapping(e) {\n    if (e.target.tagName === 'A') {\n      e.preventDefault();\n      const href = e.target.getAttribute('href');\n      return this.props.history.push('/d/es/' + href);\n    }\n  }\n\n  render() {\n    const {indices} = this.state;\n    return <section onClick={this.getMapping}>\n      <NakedTable data={{rows: indices, total: indices.length}} table={Indices.table} containerClass='naked'/>\n    </section>\n  }\n}\n\nclass Types extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      types: []\n    }\n  }\n\n  async componentDidMount() {\n    this.load();\n  }\n\n  componentDidUpdate() {\n    const {index: prev} = this.state;\n    const {index: cur} = this.props.match.params;\n    if (prev !== cur) {\n      this.load();\n    }\n  }\n\n  async load() {\n    const {index} = this.props.match.params;\n    const res = await mappings('/' + index);\n    const types = Object.keys(res[index].mappings);\n    this.setState({\n      types,\n      index,\n    });\n  }\n\n  render() {\n\n    return <ul>\n      {\n        this.state.types.map(v => {\n          return <li key={v}>\n            <Link to={this.props.match.url + '/' + v}>{v}</Link>\n          </li>\n        })\n      }\n    </ul>\n  }\n}\n\nclass TypeRecords extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.loadData = this.loadData.bind(this);\n  }\n\n  async loadData({page, rows: size, field, order}, cb) {// 数据异步加载\n    const {index, type} = this.props.match.params;\n    const res = await search(`/${index}/${type}`, {\n      from: page - 1,\n      size,\n      query: {match_all: {}}\n    });\n    const rows = res.hits.hits.map(v => v._source);\n    cb({\n      total: res.hits.total,\n      rows,\n    });\n  }\n\n  render() {\n    const table = tables[this.props.match.params.type] || tables.auto;\n    return <NakedTable data={{rows: [], total: 0}} table={table} loadData={this.loadData}\n                       containerClass='naked' fetchByPage={true}/>\n  }\n\n}\n\nexport default Comp;\n","'use strict';\nimport React from \"react\";\n\n\n/**\n * html structure:\n * <tr>\n *     <td>text one</td>\n *     <td>text one</td>\n *     <td>text one</td>\n *     ...\n * </tr>\n * ...\n */\nexport default function buildRows(rows, fieldNames, fieldsConfig) {\n  return rows.map((row, i) => {\n    return <tr key={i}>{\n      fieldNames.map((field, ii) => {\n        var value = row['_' + field];//cache\n        if (value == null) {\n          value = row[field];\n          var fmt = fieldsConfig[field].format;\n          if (fmt) {\n            value = fmt(value, field, row);\n          }\n          row['_' + field] = value || '';\n        }\n        return <td key={ii} dangerouslySetInnerHTML={{__html: value}}/>\n      })}\n    </tr>;\n  })\n};\n","'use strict';\nimport React from \"react\";\n\n/**\n * Default Tabs component\n */\nclass Tabs extends React.Component {\n\n  /**\n   * only update when selectedTab changes\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selectedTab !== nextProps.selectedTab;\n  }\n\n  /**\n   * html structure:\n   * <ul>\n   *     <li class=\"active\"><a href=\"javascript:void(0)\">tab one</a></li>\n   *     <li><a href=\"javascript:void(0)\">tab two</a></li>\n   *     ...\n   * </ul>\n   */\n  render() {\n\n    return <ul className={this.props.tabClass}>{\n      this.props.tabNames.map(function (tab, index) {\n        var props = {key: index};\n        if (this.props.selectedTab === index) {\n          props.className = 'active';\n        } else {\n          props.onClick = this.props.setTab.bind(this, index);\n        }\n        return <li {...props}>\n          <a href='javascript:void(0);'>{tab}</a>\n        </li>\n      }, this)\n    }\n    </ul>\n  }\n};\n\nexport default Tabs;\n","'use strict';\nimport React from \"react\";\n\n/**\n * THead component\n */\nclass THead extends React.Component {\n\n  /**\n   * Only update when selectedTab or order changes\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selectedTab !== nextProps.selectedTab\n      || this.props.order !== nextProps.order\n      || this.props.fields.length !== nextProps.fields.length\n  }\n\n  componentDidMount() {\n    this.initTooltip();\n  }\n\n  /**\n   * add tooltip\n   */\n  initTooltip() {\n    if (window.$ && $.fn.tipsy) {\n      $(this.getDOMNode()).tipsy({\n        gravity: 's',\n        live: '.naked-tooltip',\n        title: function () {\n          return this.getAttribute('data-tip');\n        },\n        html: true\n      });\n    }\n  }\n\n  /**\n   * html structure:\n   * <thead>\n   *     <tr>\n   *         <th>label one</th>\n   *         <th>label two</th>\n   *         <th>label three</th>\n   *         ...\n   *     </tr>\n   * </thead>\n   */\n  render() {\n    const sortingField = this.props.field,\n      sortingOrder = this.props.order,\n      fields = this.props.fields,\n      fieldsConfig = this.props.table.fields || this.props.labelledFields,\n      globallySortable = this.props.table.sortable;\n    return <thead>\n    <tr>{\n      fields.map(function (field, index) {\n        const config = fieldsConfig[field],\n          clz = sortingField === field ? sortingOrder : '';\n        if (!config) {\n          throw Error('field:' + field + ' not in fields list -> ', fields);\n        }\n        const props = {\n          key: index,\n          style: config.style,\n          className: 'naked-tooltip ' + clz,\n          'data-tip': config.tooltip || config.label\n        };\n        if (config.sortable || (globallySortable && config.sortable !== false)) {\n          props.className += ' sortable';\n          props.onClick = this.props.sort.bind(this, field);\n        }\n        return <th {...props}>{fieldsConfig[field].label}</th>\n      }, this)\n    }\n    </tr>\n    </thead>;\n  }\n}\n\nexport default THead;\n","'use strict';\nimport React from \"react\";\n\nimport buildRows from \"./utils\";\n\n/**\n * Default tbody component\n *\n * html structure:\n * <tbody>\n *     <tr>\n *         <td>text one</td>\n *         <td>text one</td>\n *         <td>text one</td>\n *         ...\n *     </tr>\n *     ...\n * </tbody>\n */\nclass TBody extends React.Component {\n  render() {\n\n    const {fields, fieldsConfig, labelledFields, rows, loadingTip} = this.props;\n\n    if (rows && rows.length) {\n      return <tbody>{buildRows(rows, fields, fieldsConfig || labelledFields)}</tbody>;\n    }\n    return <tbody>\n    <tr>\n      <td colSpan={fields.length}>{loadingTip}</td>\n    </tr>\n    </tbody>;\n\n  }\n}\n\nexport default TBody;\n","'use strict';\nimport React from \"react\";\n\nvar buildRows = require(\"./utils\").buildRows;\n\n/**\n * Default tfoot component\n */\nclass TFoot extends React.Component {\n\n  /**\n   * only update when selectedTab changes\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selectedTab !== nextProps.selectedTab;\n  }\n\n  /**\n   * html structure:\n   * <tfoot>\n   *     <tr>\n   *         <td>text one</td>\n   *         <td>text one</td>\n   *         <td>text one</td>\n   *         ...\n   *     </tr>\n   *     ...\n   * </tfoot>\n   */\n  render() {\n\n    const {rows} = this.props;\n    if (rows && rows.length) {\n      return <tfoot>{buildRows(rows, this.props.fields, this.props.table.fields || this.props.labelledFields)}</tfoot>;\n    }\n    return null;\n  }\n}\n\nexport default TFoot;\n","'use strict';\nimport React from \"react\";\n\n/**\n * Pagination utilities\n */\nconst PaginationMixin = {\n\n  /**\n   * jump to g given page\n   * @param action Possible values:start/prev/next/end/jump\n   * @param e Event triggered by an input change\n   */\n  jump: function (action, e) {\n    if (e.currentTarget.className !== 'disabled') {\n      this.props.jump(action, e.target.value);\n    }\n  },\n\n  /**\n   * set row count per page\n   * @param e\n   */\n  setPageSize: function (e) {\n    this.props.setPageSize(e.target.value);\n  },\n\n  /**\n   * page size options\n   *\n   * html structure:\n   * <select>\n   *     <option>5</option>\n   *     <option>10</option>\n   *     <option>15</option>\n   * </select>\n   *\n   * @returns {XML}\n   */\n  buildPageList: function () {\n    return <select onChange={this.setPageSize}>{\n      this.props.pageList.map(function (v, i) {\n        return <option>{v}</option>\n      })}\n    </select>\n  },\n\n  /**\n   * only update when pageNo changes\n   */\n  shouldComponentUpdate: function (nextProps) {\n    return this.props.page !== nextProps.page || this.props.pageTotal !== nextProps.pageTotal;\n  }\n};\n\nexport default PaginationMixin;\n","'use strict';\nimport React from \"react\";\n\nimport PaginationMixin from './PaginationMixin';\n\n/**\n * Default pagination component\n */\nclass Pagination extends React.Component {\n\n  constructor(props) {\n    super(props);\n    Object.assign(this, PaginationMixin);\n  }\n\n  getPageInfo() {\n    return this.props.page + '/' + this.props.pageTotal;\n  }\n\n  /**\n   * html structure:\n   * <ul>\n   *     <li>上一页</li>\n   *     <li>1/5</li>\n   *     <li>下一页</li>\n   * </li>\n   *\n   * @returns {XML}\n   */\n  render() {\n\n    return <div style={{textAlign: 'right'}}>\n      <ul className='nt-pagination'>\n        <li onClick={this.jump.bind(this, 'prev')} className={this.props.page === 1 ? 'disabled' : null}>\n          <a href='javascript:void 0'>上一页</a>\n        </li>\n        <li>\n          {this.getPageInfo()}\n        </li>\n        <li onClick={this.jump.bind(this, 'next')}\n            className={this.props.page === this.props.pageTotal ? 'disabled' : null}>\n          <a href='javascript:void 0'>下一页 </a>\n        </li>\n      </ul>\n    </div>\n  }\n};\n\nexport default Pagination;\n","'use strict';\nimport React from \"react\";\n\nimport Tabs from './Tabs';\nimport THead from './THead';\nimport TBody from './TBody';\nimport TFoot from './TFoot';\nimport Pagination from './Pagination';\nimport './naked.css'\n\nclass NakedTable extends React.Component {\n  constructor(props) {\n    super(props);\n    ['setTab', 'sort', 'jump', 'setPageSize'].forEach(m => this[m] = this[m].bind(this));\n    this.state = this._getInitialState();\n  }\n\n  static defaultProps = {\n\n    Tabs, //Tabs component\n    THead, // THead component\n    TBody, // TBody component\n    TFoot, //TFoot component\n    Pagination, //Pagination component\n\n    containerClass: 'naked', // ClassName of this component\n    tabClass: 'nt-nav', // ClassName of Tabs component\n    tableClass: 'nt-table', // ClassName of table element\n    loadingTip: 'Loading ...', // Loading tip\n\n    tabNames: null,// Allow alternative tab names\n    selectedTab: 0, // Index of the active tab\n    form: null, // Used to provide extra params, optional\n    fetchByPage: false, // Whether fetch data by page\n    showPagination: true, // if false , Pagination component will be hidden\n    data: {total: 0, rows: []}, // Default data\n    order: null, // Sort in which order. Possible values: asc/desc\n    field: null, // Sort by which field\n    loadData: null,// used to load data\n  }\n\n  _getInitialState() {\n    const {table, data} = this.props;\n    const tabNames = this.props.tabNames || table.tabs.map(t => t.label);\n    const pageList = table.pageList || [10];//10 rows per page by default\n\n    this.handleFormSubmit();\n\n    return {\n      data: data, // Table data\n      selectedTab: this.props.selectedTab, // Default tab\n      page: 1, // Default pageNo\n      rows: table.pageList[0], // Row count per page\n      pageTotal: Math.ceil(data.total / table.pageList[0]), // Page count\n      order: this.props.order,\n      field: this.props.field,\n      tabClass: table.tabClass || this.props.tabClass,\n      showTabs: tabNames && tabNames.length > 1,\n      loadData: table.loadData || this.props.loadData,\n      tabNames,\n      pageList,\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const {table, data} = props;\n    let labelledFields = table.fields;\n    let {fields} = table.tabs[props.selectedTab] || {}; // fields to display\n    if (!fields && data.rows.length) {\n      fields = Object.keys(data.rows[0]);\n      labelledFields = fields.map(v => ({[v]: {label: v}}));\n    }\n    return Object.assign({}, state, {\n      data,\n      fields: fields || [],\n      labelledFields: labelledFields || [],\n      pageTotal: Math.ceil(data.total / state.pageList[0]), // Page count\n    })\n  }\n\n  componentDidMount() {\n    this.ajax();\n  }\n\n  render() {\n    const {showTabs, tabClass, tabNames, fields, labelledFields, pageList, pageTotal} = this.state;\n    const {table} = this.props;\n\n    return <div className={this.props.containerClass}>\n      {showTabs && (<this.props.Tabs tabClass={tabClass} tabNames={tabNames}\n                                     selectedTab={this.state.selectedTab} setTab={this.setTab} table={table}/>)}\n      <table className={this.props.tableClass}>\n\n        <this.props.THead fields={fields} table={this.props.table} labelledFields={labelledFields}\n                          field={this.state.field}\n                          order={this.state.order} sort={this.sort} selectedTab={this.state.selectedTab}/>\n\n        <this.props.TBody fields={fields} fieldsConfig={this.props.table.fields} labelledFields={labelledFields}\n                          rows={this.getRows()}/>\n\n        <this.props.TFoot fields={fields} fieldsConfig={this.props.table.fields} labelledFields={labelledFields}\n                          rows={this.state.data.footer} selectedTab={this.state.selectedTab}/>\n\n      </table>\n      {this.props.showPagination && (\n        <this.props.Pagination pageList={pageList} total={this.state.data.total} page={this.state.page}\n                               pageTotal={pageTotal} jump={this.jump} setPageSize={this.setPageSize}/>)}\n    </div>\n  }\n\n\n  /**\n   * Reload table data on form submit\n   */\n  handleFormSubmit() {\n    if (!this.props.form) {\n      return;\n    }\n    this.props.form.addEventListener('submit', (e) => {\n      e.preventDefault();\n      this.ajax(1);// 1 : page reset\n    });\n  }\n\n  /**\n   * Sort table rows on th click\n   * @param field The field to sort by\n   * @param e event triggered by clicking th.sortable\n   */\n  sort(field, e) {\n    var rows = this.state.data.rows;\n    if (!rows) {\n      return;\n    }\n    this.state.field = field;\n    this.state.order = this.state.order === 'desc' ? 'asc' : 'desc';//reversed order\n\n    // Server side sort\n    if (this.props.fetchByPage) {\n      this.ajax();\n      return;\n    }\n\n    this.doSort(rows, field, this.state.order);\n\n    this.setState({\n      data: {rows: rows, total: rows.length, footer: this.state.data.footer}\n    });\n  }\n\n  /**\n   * Sort table rows on data load\n   * @param rows\n   */\n  sortOnLoad(rows) {\n    if (rows && rows.length) {\n      const {order, field} = this.state;\n      if (!order || !field) {\n        return;\n      }\n      this.doSort(rows, field, order);\n    }\n  }\n\n  /**\n   * Sort rows by field in a given order\n   * @param rows data to be sorted\n   * @param field\n   * @param order\n   */\n  doSort(rows, field, order) {\n    //todo for a derived field, value may be unavailable\n    rows.sort((a, b) => {//从小到大排列\n      const a1 = a[field],\n        b1 = b[field];\n      return a1 === b1 ? 0 : (a1 > b1 ? 1 : -1);\n    });\n    if (order === 'desc') {\n      rows.reverse();\n    }\n  }\n\n  /**\n   * Based on action , jump to a given page\n   * @param action\n   * @param inputVal\n   */\n  jump(action, inputVal) {\n    let {page, pageTotal: total} = this.state;\n\n    switch (action) {\n      case 'end':\n        page = total;\n        break;\n      case 'prev':\n        page--;\n        break;\n      case 'next':\n        page++;\n        break;\n      case 'jump':\n        page = +inputVal || 1;\n        break;\n      default:\n        page = 1;\n    }\n    if (page > total) {\n      page = total;\n    } else if (page < 1) {\n      page = 1;\n    }\n    page !== this.state.page && this.ajax(page);\n  }\n\n  /**\n   * Set row count per page\n   */\n  setPageSize(size) {\n    // Reload data from server\n    if (this.props.fetchByPage) {\n      this.ajax(1, size);\n      return;\n    }\n    this.setState({\n      rows: size,\n      page: 1,\n      pageTotal: Math.ceil(this.state.data.total / size || 1)\n    });\n\n  }\n\n  /**\n   * Select a tab\n   */\n  setTab(selectedTab) {\n    const fields = this.props.table.tabs[selectedTab].fields;\n    this.setState({selectedTab: selectedTab, fields});\n  }\n\n  /**\n   * Request parmas\n   * @param page pageNo\n   * @param rows pageSize\n   */\n  getParams(page, rows) {\n    return {//传向服务端的参数\n      page: page || this.state.page,\n      rows: rows || this.state.rows,\n      field: this.state.field,\n      order: this.state.order\n    };\n  }\n\n  /**\n   * Load data locally or remotely, depending on this.props.fetchByPage\n   * @param page pageNo\n   * @param rows pageSize\n   */\n  ajax(page, rows) {\n    if (!this.props.fetchByPage && page) {//数据全量获取\n      this.setState({page: page});\n      return;\n    }\n    const params = this.getParams(page, rows);\n    this.state.loadData && this.state.loadData(params, (data) => {\n      const s = {};\n      if (data.total < 1) {\n        s.loadingTip = '没有数据可展示';\n      }\n      s.data = data;\n\n      this.sortOnLoad(data.rows);\n\n      if (!this.state.fields.length) {// 没有配置fields. 根据返回的数据动态获取\n        if (data.rows.length) {\n          s.fields = Object.keys(data.rows[0]);\n          s.labelledFields = s.fields.reduce((p, v) => {\n            p[v] = {label: v};\n            return p;\n          }, {});\n        }\n      }\n\n\n      this.setState({\n        page: this.props.fetchByPage ? params.page : 1,\n        pageTotal: Math.ceil(data.total / this.state.rows || 1),\n        ...s,\n      });\n    });\n  }\n\n  /**\n   * Rows for current page\n   */\n  getRows() {\n    const page = this.state.page,\n      pageSize = this.state.rows,\n      rows = this.state.data.rows;\n    if (this.props.fetchByPage) {\n      return rows;\n    }\n    return rows.slice((page - 1) * pageSize, page * pageSize);\n  }\n}\n\nexport default NakedTable;\n"],"sourceRoot":""}